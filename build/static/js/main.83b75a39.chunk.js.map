{"version":3,"sources":["actions/types.js","actions/overlaysActions.js","actions/postActions.js","actions/friendActions.js","utils/htmlDecoder.js","actions/reactionActions.js","components/AddCommentForm.js","actions/commentActions.js","components/EditCommentForm.js","components/DropdownMenu.js","components/PrivateComponent.js","components/LikeButton.js","components/Comment.js","components/CommentsList.js","components/Post.js","components/PostsList.js","components/AddPostSection.js","components/ProfilePosts.js","components/FriendButton.js","components/ProfileFriends.js","components/Error.js","components/Profile.js","components/auth/Login.js","actions/authActions.js","components/FriendsList.js","components/AccountDashboard.js","components/FriendsDashboard.js","components/HomeSidebar.js","components/Newsfeed.js","components/Navbar.js","components/PrivateRoute.js","components/PostForm.js","components/ReactionsList.js","components/auth/Register.js","components/AccountInfoItem.js","components/AccountInfo.js","components/SettingsDashboard.js","utils/imageProcessing.js","components/UploadPicture.js","App.js","utils/reduxMiddleware.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/postReducer.js","reducers/commentReducer.js","reducers/overlaysReducer.js","reducers/friendReducer.js","reducers/actionReducer.js","reducers/index.js","store.js","index.js"],"names":["USER_LOGOUT","USER_LOGIN","GET_ERRORS","CLEAR_ERRORS","GET_COMMENTS","ADD_COMMENT","GET_POSTS","ADD_POST","DELETE_COMMENT","UPDATE_COMMENT","ADD_COMMENT_REACTION","DELETE_COMMENT_REACTION","ADD_POST_REACTION","DELETE_POST_REACTION","DELETE_POST","UPDATE_POST","ENABLE_POST_FORM","DISABLE_POST_FORM","MAP_POST_TO_COMMENTS","UNMAP_POST_TO_COMMENTS","RESET_COMMENTS","RESET_POSTS","ENABLE_REACTIONS_LIST","DISABLE_REACTIONS_LIST","ENABLE_SIGNUP_FORM","DISABLE_SIGNUP_FORM","ADD_FRIEND_REQUEST","ADD_FRIEND","DELETE_FRIEND_REQUEST","DELETE_FRIEND","ADD_FRIEND_TO_AUTH","DELETE_FRIEND_FROM_AUTH","GET_FRIENDS","GET_ACTION","CLEAR_ACTION","UPDATE_USER","ENABLE_UPLOAD_PICTURE","DISABLE_UPLOAD_PICTURE","enablePostForm","post","profile","dispatch","type","payload","disablePostForm","getPosts","posts","commentsObj","postsOnly","reduce","arr","comments","restOfPost","id","push","addFriendToAuth","body","username","axios","then","response","data","friend","catch","err","declineFriendRequest","friendId","delete","cancelFriendRequest","deleteFriend","user","userId","decodeHtml","html","txt","document","createElement","innerHTML","value","addReaction","parentElement","post_id","socket","emit","comment","reaction","deleteReaction","_id","connect","state","auth","addComment","console","log","parentId","postId","profileId","isFocused","disableAddCommentFocus","useState","commentContent","setCommentContent","commentInputEl","useRef","useEffect","current","focus","onSubmit","e","preventDefault","content","className","href","rel","src","picture","url","alt","placeholder","onChange","target","onBlur","ref","required","style","display","updateComment","put","toggleEditComment","updatedComment","setUpdatedComment","input","parent_id","update","onKeyDown","key","onClick","DropdownMenu","items","Dropdown","Toggle","Menu","map","item","Item","function","label","uuid","parent","Component","component","rest","author","destination_profile","enableReactionsList","reactions","hidden","visibility","length","deleteComment","loadComments","get","enableAddComment","setEnableAddComment","enableEditComment","setEnableEditComment","toggleLike","currentReaction","find","repliesDisplayed","replies","filter","dropdownItems","name","dateTime","date","Date","toLocaleDateString","month","day","year","CommentsList","deletePost","postIndex","commentsCount","setCommentsCount","setIsFocused","enableComments","setEnableComments","useDispatch","PostsList","index","first_name","friends","friendsArr","Object","keys","slice","mapDispatchToProps","sendFriendRequest","addFriend","shortVersion","handleAddFriend","handleDeleteFriend","handleAcceptRequest","handleDeclineRequest","handleCancelRequest","Button","incomingFriendRequests","outgoingFriendRequests","deleteFriendFromAuth","getDropdownItems","errors","currentError","message","saveFriends","enableUploadPicture","match","setUser","loading","params","Spinner","variant","animation","role","undefined","exact","to","activeClassName","path","render","Error","login","enableSignupForm","withRouter","history","email","setEmail","password","setPassword","isAuthenticated","Form","Group","Control","isInvalid","Feedback","msg","action","heading","getApiData","buttonItems","setFriendsArray","actionObj","JSON","stringify","button","props","AccountDashboard","mainItems","navItems","showNav","setShowNav","icon","componentProps","getFriends","getIncomingFriendRequests","friendRequestsReceived","FaUserFriends","BsFillPersonPlusFill","FriendsList","logout","searchResults","setSearchResults","searchInputEl","setTimeout","querySelector","click","overlays","updatePost","addPost","postForm","postContent","setPostContent","submitBtn","disabled","Modal","Header","closeButton","Title","as","Body","updatedPost","reactionsList","register","setUsername","firstName","setFirstName","lastName","setLastName","deleteAccount","btnLabel","showForm","setShowForm","formInput","setFormInput","setErrors","onInputChange","toggleFormDisplay","handleFormSubmit","renderFormContent","infoItems","setInfoItems","last_name","SettingsDashboard","FcSettings","AccountInfo","getCroppedImg","image","crop","canvas","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","Promise","resolve","reject","toBlob","blob","showCropTool","setShowCropTool","imgSrc","setImgSrc","setImage","aspect","setCrop","toggleInputDisplay","handleImageUpload","a","croppedImg","FormData","append","config","header","location","reload","encType","onImageLoaded","minHeight","minWidth","accept","URL","createObjectURL","files","Footer","verifyAuth","disableReactionsList","disableSignupForm","disableUploadPicture","status","signupForm","uploadPicture","show","isEnabled","handleShowModal","onHide","backdropClassName","dialogClassName","FriendsDashboard","Profile","Login","mapArrayToObject","array","obj","initialState","combineReducers","authenticatedUser","newObj","updatedOutbound","updatedInbound","updatedFriends","newArr","newStateArr","newComment","findIndex","reply","i","splice","deletedComment","element","newState","friendsObj","newFriend","updatedState","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","io","on","reactionObj","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83b75a39.chunk.js","sourcesContent":["export const USER_LOGOUT = 'USER_REGISTER';\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const GET_COMMENTS = 'GET_COMMENTS';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const GET_POSTS = 'GET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport const ADD_COMMENT_REACTION = 'ADD_COMMENT_REACTION';\nexport const DELETE_COMMENT_REACTION = 'DELETE_COMMENT_REACTION';\nexport const ADD_POST_REACTION = 'ADD_POST_REACTION';\nexport const DELETE_POST_REACTION = 'DELETE_POST_REACTION';\nexport const DELETE_POST = 'DELETE_POST';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const ENABLE_POST_FORM = 'ENABLE_POST_FORM';\nexport const DISABLE_POST_FORM = 'DISABLE_POST_FORM';\nexport const MAP_POST_TO_COMMENTS = 'MAP_POST_TO_COMMENTS';\nexport const UNMAP_POST_TO_COMMENTS = 'UNMAP_POST_TO_COMMENTS';\nexport const RESET_COMMENTS = 'RESET_COMMENTS';\nexport const RESET_POSTS = 'RESET_POSTS';\nexport const ENABLE_REACTIONS_LIST = 'ENABLE_REACTIONS_LIST';\nexport const DISABLE_REACTIONS_LIST = 'DISABLE_REACTIONS_LIST';\nexport const ENABLE_SIGNUP_FORM = 'ENABLE_SIGNUP_FORM';\nexport const DISABLE_SIGNUP_FORM = 'DISABLE_SIGNUP_FORM';\nexport const ADD_FRIEND_REQUEST = 'ADD_FRIEND_REQUEST';\nexport const ADD_FRIEND = 'ADD_FRIEND';\nexport const DELETE_FRIEND_REQUEST = 'DELETE_FRIEND_REQUEST';\nexport const DELETE_FRIEND = 'DELETE_FRIEND';\nexport const ADD_FRIEND_TO_AUTH = 'ADD_FRIEND_TO_AUTH';\nexport const DELETE_FRIEND_FROM_AUTH = 'DELETE_FRIEND_FROM_AUTH';\nexport const GET_FRIENDS = 'GET_FRIENDS';\nexport const GET_ACTION = 'GET_ACTION';\nexport const CLEAR_ACTION = 'CLEAR_ACTION';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const ENABLE_UPLOAD_PICTURE = 'ENABLE_UPLOAD_PICTURE';\nexport const DISABLE_UPLOAD_PICTURE = 'DISABLE_UPLOAD_PICTURE';","import { \n  ENABLE_POST_FORM, \n  DISABLE_POST_FORM,\n  ENABLE_REACTIONS_LIST,\n  DISABLE_REACTIONS_LIST,\n  ENABLE_SIGNUP_FORM,\n  DISABLE_SIGNUP_FORM,\n  ENABLE_UPLOAD_PICTURE,\n  DISABLE_UPLOAD_PICTURE,\n  CLEAR_ERRORS,\n} from \"./types\";\n\nexport const enablePostForm = (post = {}, profile = {}) => dispatch => {\n  dispatch({\n    type: ENABLE_POST_FORM,\n    payload: {\n      post,\n      profile\n    }\n  });\n};\n\nexport const disablePostForm = () => dispatch => {\n  dispatch({\n    type: DISABLE_POST_FORM\n  });\n};\n\nexport const enableReactionsList = (reactions) => dispatch => {\n  dispatch({\n    type: ENABLE_REACTIONS_LIST,\n    payload: reactions\n  });\n};\n\nexport const disableReactionsList = () => dispatch => {\n  dispatch({\n    type: DISABLE_REACTIONS_LIST\n  });\n};\n\nexport const enableSignupForm = () => dispatch => {\n  // delete potential errors stored in redux store\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  \n  dispatch({\n    type: ENABLE_SIGNUP_FORM\n  });\n};\n\nexport const disableSignupForm = () => dispatch => {\n  // delete potential errors stored in redux store\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n  \n  dispatch({\n    type: DISABLE_SIGNUP_FORM\n  });\n};\n\nexport const enableUploadPicture = () => dispatch => {\n  dispatch({\n    type: ENABLE_UPLOAD_PICTURE\n  });\n};\n\nexport const disableUploadPicture = () => dispatch => {\n  dispatch({\n    type: DISABLE_UPLOAD_PICTURE\n  });\n};","import {\n  GET_ERRORS,\n  GET_POSTS,\n  GET_COMMENTS,\n  DELETE_POST,\n  UPDATE_POST,\n  ADD_POST,\n  MAP_POST_TO_COMMENTS,\n  UNMAP_POST_TO_COMMENTS,\n  GET_ACTION\n} from \"./types\";\nimport axios from 'axios';\nimport { socket } from '../index';\n\nexport const getPosts = (posts) => dispatch => {\n  // object to store all comments by their id to facilitate lookup\n  const commentsObj = {};\n  \n  // array of posts without their comments\n  const postsOnly = posts.reduce((arr, post) => {\n    const { comments, ...restOfPost} = post;\n\n    // map comments to their post ID in comments object\n    commentsObj[post.id] = comments;\n\n    // save post without its comments\n    arr.push(restOfPost);\n\n    return arr;\n  }, []);\n  \n  dispatch({\n    type: GET_POSTS,\n    payload: postsOnly\n  });\n  \n  // NOTE: comments added to redux state are only direct comments to a post.\n  // When user chooses to load replies to comments, the additional comments\n  // retrieved will be added to redux state\n  dispatch({\n    type: GET_COMMENTS,\n    payload: commentsObj\n  });\n};\n\nexport const deletePost = (post) => dispatch => {\n  axios.delete(`/api/posts/${post.id}`).then((response) => {\n    // send deleted post back to server to broadcast to other users\n    socket.emit('delete post', post);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: post\n    });\n\n    dispatch({\n      type: UNMAP_POST_TO_COMMENTS,\n      payload: post\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const updatePost = (post) => dispatch => {\n  axios.put(`/api/posts/${post.id}`, {  \n    content: post.content\n  }).then((response) => {\n    // send updated post back to server to broadcast to other users\n    socket.emit('update post', response.data);\n\n    dispatch({\n      type: UPDATE_POST,\n      payload: response.data\n    });\n\n    // store action in redux store to confirm above actions were dispatched\n    dispatch({\n      type: GET_ACTION,\n      payload: {\n        type: UPDATE_POST,\n        payload: response.data\n      }\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const addPost = (body) => dispatch => {\n  axios.post('/api/posts', body).then((response) => {\n    // send new post back to server to broadcast to other users\n    socket.emit('new post', response.data);\n\n    dispatch({\n      type: ADD_POST,\n      payload: response.data\n    });\n\n    dispatch({\n      type: MAP_POST_TO_COMMENTS,\n      payload: response.data\n    });\n\n    // store action in redux store to confirm above actions were dispatched\n    dispatch({\n      type: GET_ACTION,\n      payload: {\n        type: MAP_POST_TO_COMMENTS,\n        payload: response.data\n      }\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n","import { \n  ADD_FRIEND_REQUEST, \n  ADD_FRIEND,\n  GET_ERRORS,\n  DELETE_FRIEND_REQUEST,\n  GET_FRIENDS,\n  DELETE_FRIEND,\n  DELETE_FRIEND_FROM_AUTH,\n  ADD_FRIEND_TO_AUTH,\n  GET_ACTION,\n} from \"./types\";\nimport axios from 'axios';\n\nexport const sendFriendRequest = (body, username) => dispatch => {\n  axios.post(`/api/users/${username}/requests`, body).then((response) => {\n    dispatch({\n      type: ADD_FRIEND_REQUEST,\n      payload: response.data\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\n// add friend to auth AND friends objects\nexport const addFriend = (body, username) => dispatch => {\n  axios.post(`/api/users/${username}/friends`, body).then((response) => {\n    // add friend to friends object in redux store\n    dispatch({\n      type: ADD_FRIEND,\n      payload: response.data.user\n    });\n\n    // add friend to friends object in redux store at auth.user\n    dispatch({\n      type: ADD_FRIEND_TO_AUTH,\n      payload: response.data.friend\n    });\n\n    // remove added friend from outgoing friend requests in redux store\n    dispatch({\n      type: DELETE_FRIEND_REQUEST,\n      payload: response.data.friend.id\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\n// add friend to auth object ONLY\nexport const addFriendToAuth = (body, username) => dispatch => {\n  axios.post(`/api/users/${username}/friends`, body).then((response) => {\n    // add friend to friends object in redux store\n    dispatch({\n      type: ADD_FRIEND_TO_AUTH,\n      payload: response.data.friend\n    });\n\n    // remove added friend from outgoing friend requests in redux store\n    dispatch({\n      type: DELETE_FRIEND_REQUEST,\n      payload: response.data.friend.id\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const declineFriendRequest = (username, friendId) => dispatch => {\n  axios.delete(`/api/users/${username}/requests/${friendId}?decline=true`)\n       .then((response) => {\n          dispatch({\n            type: DELETE_FRIEND_REQUEST,\n            payload: friendId\n          });\n\n          // store action in redux store to confirm above action was dispatched\n          dispatch({\n            type: GET_ACTION,\n            payload: {\n              type: DELETE_FRIEND_REQUEST,\n              payload: friendId\n            }\n          });\n        }).catch((err) => {\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response\n          });\n        });\n};\n\nexport const cancelFriendRequest = (username, friendId) => dispatch => {\n  axios.delete(`/api/users/${username}/requests/${friendId}?unsend=true`)\n       .then((response) => {\n          dispatch({\n            type: DELETE_FRIEND_REQUEST,\n            payload: friendId\n          });\n        }).catch((err) => {\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response\n          });\n        });\n};\n\n// removes friend from friends object in auth.user AND from friends object in \n// state.friends\nexport const deleteFriend = (user, friendId) => dispatch => {\n  axios.delete(`/api/users/${user.username}/friends/${friendId}`).then((response) => {\n    dispatch({\n      type: DELETE_FRIEND,\n      payload: {\n        userId: user.id,\n        friendId\n      }\n    });\n\n    dispatch({\n      type: DELETE_FRIEND_FROM_AUTH,\n      payload: friendId\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\n// removes friend from friends object in auth.user ONLY\nexport const deleteFriendFromAuth = (user, friendId) => dispatch => {\n  axios.delete(`/api/users/${user.username}/friends/${friendId}`).then((response) => {\n    dispatch({\n      type: DELETE_FRIEND_FROM_AUTH,\n      payload: friendId\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const saveFriends = (friends) => dispatch => {\n  dispatch({\n    type: GET_FRIENDS,\n    payload: friends\n  });\n};\n\nexport const getFriends = (username) => dispatch => {\n  axios.get(`/api/users/${username}/friends`).then((response) => {\n    dispatch({\n      type: GET_FRIENDS,\n      payload: response.data\n    });\n\n    // store action in redux store to confirm above action was dispatched\n    dispatch({\n      type: GET_ACTION,\n      payload: {\n        type: GET_FRIENDS,\n        payload: response.data\n      }\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const getIncomingFriendRequests = (username) => dispatch => {\n  axios.get(`/api/users/${username}/requests?received=true`).then((response) => {\n    dispatch({\n      type: GET_FRIENDS,\n      payload: response.data.friendRequestsReceived\n    });\n\n    // store action in redux store to confirm above action was dispatched\n    dispatch({\n      type: GET_ACTION,\n      payload: {\n        type: GET_FRIENDS,\n        payload: response.data\n      }\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n","export default function decodeHtml(html) {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n}","import { \n  GET_ERRORS,\n  ADD_COMMENT_REACTION,\n  DELETE_COMMENT_REACTION,\n  ADD_POST_REACTION,\n  DELETE_POST_REACTION\n} from \"./types\";\nimport axios from 'axios';\nimport { socket } from '../index';\n\nexport const addReaction = (body, parentElement) => dispatch => {\n  axios.post('/api/reactions', body).then((response) => {\n    if (parentElement.post_id) { // implies parent must be a comment\n      // send new reaction back to server to broadcast to other users\n      socket.emit('new reaction', {\n        comment: parentElement,\n        reaction: response.data\n      });\n\n      dispatch({\n        type: ADD_COMMENT_REACTION,\n        payload: {\n          comment: parentElement,\n          reaction: response.data\n        }\n      });\n    } else {\n      // send new reaction back to server to broadcast to other users\n      socket.emit('new reaction', {\n        post: parentElement,\n        reaction: response.data\n      });\n\n      dispatch({\n        type: ADD_POST_REACTION,\n        payload: {\n          post: parentElement,\n          reaction: response.data\n        }\n      });\n    }\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const deleteReaction = (reaction, parentElement) => dispatch => {\n  axios.delete(`/api/reactions/${reaction._id}`).then((response) => {\n    if (parentElement.post_id) { // implies parent must be a comment\n      // send deleted reaction back to server to broadcast to other users\n      socket.emit('delete reaction', {\n        comment: parentElement,\n        reaction\n      });\n      \n      dispatch({\n        type: DELETE_COMMENT_REACTION,\n        payload: {\n          comment: parentElement,\n          reaction\n        }\n      });\n    } else {\n      // send deleted reaction back to server to broadcast to other users\n      socket.emit('delete reaction', {\n        post: parentElement,\n        reaction\n      });\n\n      dispatch({\n        type: DELETE_POST_REACTION,\n        payload: {\n          post: parentElement,\n          reaction\n        }\n      });\n    }\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// redux actions\nimport { addComment } from '../actions/commentActions';\n\n// stylesheet\nimport '../styles/AddCommentForm.css';\n\nfunction AddCommentForm({ \n  type, \n  parentId, \n  postId, \n  profileId, \n  comments, \n  addComment,\n  isFocused,\n  disableAddCommentFocus,\n  auth,\n}) {\n  // \"type\" variable in props should either be \"comment\" if the comment is\n  // directly under a post, or \"reply\" if it is a reply to an existing comment\n  // console.log(postId + ': ' + isFocused)\n  const [commentContent, setCommentContent] = useState('');\n  const commentInputEl = useRef();\n\n  useEffect(() => {\n    setCommentContent('');\n  }, [comments]);\n\n  useEffect(() => {\n    if (isFocused) {\n      commentInputEl.current.focus();\n    }\n  }, [isFocused]);\n\n  const onAddCommentChange = (e) => {\n    setCommentContent(e.target.value);\n  };\n\n  const handleAddComment = (e) => {\n    e.preventDefault();\n    \n    const body = {\n      parentId,\n      profileId,\n      postId,\n      content: commentContent\n    };\n\n    addComment(body);\n  };\n\n  return (\n    <form onSubmit={handleAddComment} className=\"add-comment-form\">\n      <a href={`/${auth.user.username}`} rel=\"author\" className=\"left\">\n        <img src={auth.user.picture.url} \n            alt=\"user's profile avatar\"\n            className=\"user-picture\" />\n      </a>\n      <div className=\"secondary-bg-color secondary-frame right\">\n        <input type=\"text\" \n                placeholder={`Write a ${type}...`} \n                value={commentContent}\n                onChange={onAddCommentChange}\n                onBlur={disableAddCommentFocus}\n                ref={commentInputEl}\n                required></input>\n        <button type=\"submit\" style={{ display: 'none' }}></button>\n      </div>\n    </form>\n  )\n}\n\nAddCommentForm.propTypes = {\n  comments: PropTypes.object.isRequired,\n  addComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  comments: state.comments,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addComment })(AddCommentForm);\n","import { \n  ADD_COMMENT, \n  GET_ERRORS,\n  DELETE_COMMENT,\n  UPDATE_COMMENT\n} from \"./types\";\nimport axios from 'axios';\nimport { socket } from '../index';\n\nexport const addComment = (body) => dispatch => {\n  axios.post('/api/comments', body).then((response) => {\n    // send new comment back to server to broadcast to other users\n    socket.emit('new comment', response.data);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: [response.data]\n    });\n  }).catch((err) => {\n    console.log(err)\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const deleteComment = (comment) => dispatch => {\n  axios.delete(`/api/comments/${comment.id}`).then((response) => {\n    // send deleted comment back to server to broadcast to other users\n    socket.emit('delete comment', comment);\n\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: comment\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const updateComment = (comment) => dispatch => {\n  axios.put(`/api/comments/${comment.id}`, {  \n    content: comment.content\n  }).then((response) => {\n    // send updated comment back to server to broadcast to other users\n    socket.emit('update comment', response.data);\n\n    dispatch({\n      type: UPDATE_COMMENT,\n      payload: response.data\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const loadComments = (parentId) => dispatch => {\n  axios.get(`/api/comments?parentId=${parentId}`).then((response) => {\n    dispatch({\n      type: ADD_COMMENT,\n      payload: response.data\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport decodeHtml from '../utils/htmlDecoder';\n\n// redux actions\nimport { updateComment } from '../actions/commentActions';\n\nfunction EditCommentForm({ comment, updateComment, toggleEditComment }) {\n  const [updatedComment, setUpdatedComment] = useState(comment);\n  const input = useRef();\n\n  useEffect(() => {\n    input.current.focus();\n  }, []);\n\n  const onUpdateCommentChange = (e) => {\n    const update = {...updatedComment};\n    update.content = e.target.value;\n    setUpdatedComment(update);\n  };\n\n  const handleUpdateComment = (e) => {\n    e.preventDefault();\n\n    updateComment(updatedComment);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Escape') {\n      toggleEditComment();\n    }\n  };\n\n  return (\n    <form onSubmit={handleUpdateComment} className=\"edit-comment-form\">\n      <div className=\"secondary-bg-color tertiary-frame\">\n        <input type=\"text\" \n              placeholder={`Write a ${\n                updatedComment.post_id === updatedComment.parent_id\n                  ? 'comment'\n                  : 'reply'\n              }...`} \n              value={decodeHtml(updatedComment.content)}\n              onChange={onUpdateCommentChange}\n              onKeyDown={handleKeyPress}\n              ref={input}\n              required></input>\n        <button type=\"submit\" style={{ display: 'none' }}></button>\n      </div>\n      <p className=\"secondary-font-color left comment-btns\">\n        Press Esc to&nbsp;\n        <button type=\"button\" \n                onClick={toggleEditComment}\n                className=\"primary-font-color\">\n          cancel\n        </button>\n      </p>\n      \n    </form>\n  )\n}\n\nEditCommentForm.propTypes = {\n  updateComment: PropTypes.func.isRequired\n};\n\nexport default connect(null, { updateComment })(EditCommentForm);\n","import React from 'react';\nimport { v4 as uuid } from 'uuid';\n\n// stylesheets\nimport '../styles/DropdownMenu.css';\n\n// bootstrap components\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n// icons\nimport { BsThreeDots } from 'react-icons/bs';\n\nexport default function DropdownMenu({ items }) {\n  return (\n    <Dropdown className=\"custom-dropdown secondary-font-color\">\n      <Dropdown.Toggle>\n        <BsThreeDots className=\"more-btn secondary-bg-color-hover\" />\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <ul>\n          {\n            items.map((item) => (\n              <li key={uuid()}>\n                <Dropdown.Item onClick={item.function}>\n                  {item.label}\n                </Dropdown.Item>\n              </li>\n            ))\n          }\n        </ul>\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction PrivateComponent({ auth, parent, component: Component, ...rest }) {\n  return (\n    <>\n      {\n        auth.user.id === parent.author.id \n        || auth.user.id === parent.destination_profile\n          ? <Component {...rest} />\n          : null\n      }\n    </>\n  )\n}\n\nPrivateComponent.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// stylesheets\nimport '../styles/LikeButton.css';\n\n// icons\nimport { FaThumbsUp } from 'react-icons/fa';\n\n// redux actions\nimport { enableReactionsList } from '../actions/overlaysActions';\n\nfunction LikeButton({ \n  reactions, \n  enableReactionsList, \n  hidden, \n  posts, \n  comments \n}) {\n  // NOTE: posts and comments props is required to trigger re-render of \n  // reactions count\n\n  const displayReactionsList = () => {\n    enableReactionsList(reactions);\n  };\n  \n  return (\n    <button className=\"like-button\" \n            onClick={displayReactionsList}\n            style={hidden ? { visibility: 'hidden' } : {}}>\n      <i className=\"primary-font-color\"><FaThumbsUp /></i>\n      <span className=\"secondary-font-color\"> {reactions.length}</span>\n    </button>\n  )\n}\n\nLikeButton.propTypes = {\n  enableReactionsList: PropTypes.func.isRequired,\n  reactions: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  comments: state.comments,\n});\n\nexport default connect(mapStateToProps, { enableReactionsList })(LikeButton);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport decodeHtml from '../utils/htmlDecoder';\n\n// redux actions\nimport { deleteComment, loadComments } from '../actions/commentActions';\nimport { addReaction, deleteReaction } from '../actions/reactionActions';\n\n// stylesheets\nimport '../styles/Comment.css';\n\n// icons\nimport { BsArrowReturnRight } from 'react-icons/bs';\n\n// import components\nimport CommentsList from './CommentsList';\nimport AddCommentForm from './AddCommentForm';\nimport EditCommentForm from './EditCommentForm';\nimport DropdownMenu from './DropdownMenu';\nimport PrivateComponent from './PrivateComponent';\nimport LikeButton from './LikeButton';\n\nfunction Comment({ \n  data, \n  comments, \n  deleteComment, \n  auth, \n  addReaction, \n  deleteReaction,\n  loadComments\n}) {\n  const comment = useRef(data);\n  const [enableAddComment, setEnableAddComment] = useState(false);\n  const [enableEditComment, setEnableEditComment] = useState(false);\n\n  useEffect(() => {\n    // when there are changes to the comments object, hide \"edit reply\" input \n    // from display\n    setEnableEditComment(false);\n  }, [comments]);\n  \n  const toggleLike = () => {\n    // look for an existing reaction by authenticated user\n    const currentReaction = data.reactions.find((reaction) => (\n      reaction.author.id === auth.user.id\n    ));\n    \n    if (currentReaction) {\n      deleteReaction(currentReaction, comment.current);\n    } else {\n      const body = {\n        parentId: comment.current.id,\n        profileId: comment.current.destination_profile,\n        value: 'Like'\n      };\n\n      addReaction(body, comment.current);\n    }\n  };\n\n  const onReplyClick = () => {\n    // when reply button is clicked, \"new reply\" input should appear\n    setEnableAddComment(true);\n  };\n\n  const handleLoadComments = () => {\n    loadComments(comment.current.id);\n  };\n\n  const handleDeleteComment = () => {\n    deleteComment(comment.current);\n  };\n\n  const toggleEditComment = () => {\n    if (enableEditComment) {\n      setEnableEditComment(false);\n    } else {\n      setEnableEditComment(true);\n    }\n  };\n\n  let repliesDisplayed = [];\n  \n  // match comment's replies with their counterparts in redux state. If there \n  // is no match, the comment was never loaded\n  if (data.replies.length > 0 && comments[data.post_id].length > 0) {\n    repliesDisplayed = comments[data.post_id].filter((comment) => {\n      for (let reply of data.replies) {\n        if (reply.id === comment.id) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  const dropdownItems = [\n    {\n      label: \"Delete\",\n      function: handleDeleteComment\n    },\n    {\n      label: \"Update\",\n      function: toggleEditComment\n    }\n  ];\n  \n  return (\n    <li className={`comment${enableEditComment ? ' edit' : ''}`}>\n      {\n        // toggle between display to edit a comment and display to view a\n        // comment\n        enableEditComment\n          ? <EditCommentForm comment={comment.current} \n                            toggleEditComment={toggleEditComment} />\n          : <div className=\"sub-wrapper\">\n              <div className=\"sub-sub-wrapper\">\n                <a href={`/${data.author.username}`} rel=\"author\">\n                  <img src={data.author.picture.url} \n                      alt=\"user's profile avatar\"\n                      className=\"user-picture\" />\n                </a>\n                <div className=\"comment-main secondary-bg-color tertiary-frame\">\n                  <a href={`/${data.author.username}`} rel=\"author\">\n                    <h4>{data.author.name}</h4>\n                  </a>\n                  <p>{decodeHtml(data.content)}</p>\n                  {\n                    <LikeButton reactions={data.reactions} \n                                hidden={data.reactions.length === 0} />\n                  }\n                </div>\n                <PrivateComponent component={DropdownMenu} parent={data} items={dropdownItems} />\n              </div>\n              <div className=\"comment-btns secondary-font-color\">\n                <div className=\"left light-bold\">\n                  {\n                    // adapt like button display based on whether authenticated\n                    // user has already liked the comment\n                    data.reactions.find((reaction) => (\n                      reaction.author.id === auth.user.id\n                    ))\n                      ? <button onClick={toggleLike} \n                                className=\"primary-font-color\">\n                          Unlike\n                        </button>\n                      : <button onClick={toggleLike}>Like</button>\n                  }\n                  <i>&middot;</i>\n                  <button onClick={onReplyClick}>Reply</button>\n                </div>\n                <i>&middot;</i>\n                <button className=\"comment-date reg-display\">\n                  <time dateTime={data.date}>\n                  {new Date(data.date).toLocaleDateString(\n                    'en-US', { month: 'long', day: 'numeric', year: 'numeric' }\n                  )}\n                  </time>\n                </button>\n              </div>\n            </div>\n      }\n      {\n        // if a comment has replies but the user has never asked to display\n        // them before, a \"load replies\" button should appear instead \n        data.replies.length > 0\n          && repliesDisplayed.length < data.replies.length\n          && (\n            <div className=\"more-comments-btn light-bold secondary-font-color\">\n              <BsArrowReturnRight className=\"arrow-icon\" />\n              <button onClick={handleLoadComments}>\n                View {data.replies.length - repliesDisplayed.length} more {\n                  data.replies.length - repliesDisplayed.length > 1 \n                    ? 'replies' \n                    : 'reply'\n                }\n              </button>\n            </div>\n        )\n      }\n      {\n        // if there are replies to display, display them as a list\n        repliesDisplayed.length > 0 && (\n          <CommentsList comments={repliesDisplayed} />\n        )\n      }\n      {\n        // display input to write new reply when enableAddComment is true\n        enableAddComment && (\n          <AddCommentForm type=\"reply\" \n                          parentId={data.id} \n                          profileId={data.destination_profile}\n                          postId={data.post_id} />\n        )\n      }\n    </li>\n  );\n}\n\nComment.propTypes = {\n  comments: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  addReaction: PropTypes.func.isRequired,\n  deleteReaction: PropTypes.func.isRequired,\n  loadComments: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  comments: state.comments,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { \n  deleteComment,\n  addReaction,\n  deleteReaction,\n  loadComments\n})(Comment);\n","import React from 'react';\nimport Comment from './Comment';\n\n// stylesheets\nimport '../styles/CommentsList.css';\n\nexport default function CommentsList({ comments }) {\n  return (\n    <ul className={\n      comments[0].post_id === comments[0].parent_id\n        ? 'comment-list'\n        : 'reply-list'\n    }>\n      {comments.map((comment) => (\n        <Comment key={comment.id} data={comment} />\n      ))}\n    </ul>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport decodeHtml from '../utils/htmlDecoder';\n\n// redux actions\nimport { addReaction, deleteReaction } from '../actions/reactionActions';\nimport { deletePost } from '../actions/postActions';\nimport { enablePostForm } from '../actions/overlaysActions';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\n// stylesheets\nimport '../styles/Post.css';\n\n// icons\nimport { FiThumbsUp } from 'react-icons/fi';\nimport { IoMdThumbsUp } from 'react-icons/io';\nimport { VscComment } from 'react-icons/vsc';\n\n// components\nimport CommentsList from './CommentsList';\nimport AddCommentForm from './AddCommentForm';\nimport PrivateComponent from './PrivateComponent';\nimport LikeButton from './LikeButton';\nimport DropdownMenu from './DropdownMenu';\n\nfunction Post({ \n  postIndex, \n  comments, \n  auth, \n  addReaction, \n  deleteReaction, \n  deletePost,\n  posts,\n  enablePostForm,\n}) {\n  const [commentsCount, setCommentsCount] = useState(0);\n  const [isFocused, setIsFocused] = useState(false);\n  const [enableComments, setEnableComments] = useState(true);\n  const dispatch = useDispatch();\n\n  const toggleLike = () => {\n    // look for an existing reaction by authenticated user\n    const currentReaction = posts[postIndex].reactions.find((reaction) => (\n      reaction.author.id === auth.user.id\n    ));\n    \n    if (currentReaction) {\n      deleteReaction(currentReaction, posts[postIndex]);\n    } else {\n      const body = {\n        parentId: posts[postIndex].id,\n        profileId: posts[postIndex].destination_profile.id,\n        value: 'Like'\n      };\n      \n      addReaction(body, posts[postIndex]);\n    }\n  };\n\n  const onCommentClick = () => {\n    // when comment button is clicked, focus on comment input area\n    setIsFocused(true);\n  };\n\n  const handleDeletePost = () => {\n    deletePost(posts[postIndex]);\n  };\n\n  const handleUpdatePost = () => {\n    enablePostForm(posts[postIndex]);\n  };\n\n  const disableAddCommentFocus = () => {\n    setIsFocused(false);\n  };\n\n  const toggleCommentArea = () => {\n    setEnableComments(!enableComments);\n  };\n\n  // upon component mount, retrieve count of all comments for the post\n  useEffect(() => {\n    axios.get(`/api/comments?postId=${posts[postIndex].id}`).then((response) => {\n      setCommentsCount(response.data.length);\n    }).catch((err) => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    }); \n  }, [comments]);\n\n  const dropdownItems = [\n    {\n      label: \"Delete\",\n      function: handleDeletePost\n    },\n    {\n      label: \"Update\",\n      function: handleUpdatePost\n    }\n  ];\n  \n  return (\n    <li className=\"post primary-frame primary-bg-color\">\n      <header>\n        <div className=\"sub-header\">\n          <a href={`/${posts[postIndex].author.username}`} rel=\"author\">\n            <img src={posts[postIndex].author.picture.url} \n                alt=\"user's profile avatar\"\n                className=\"user-picture\" />\n          </a>\n          <div>\n            <a href={`/${posts[postIndex].author.username}`} rel=\"author\">\n              <h3>{posts[postIndex].author.name}</h3>\n            </a>\n            <time dateTime={posts[postIndex].date} className=\"post-date secondary-font-color\">\n              {new Date(posts[postIndex].date).toLocaleDateString(\n                'en-US', { month: 'long', day: 'numeric', year: 'numeric' }\n              )}\n            </time>\n          </div>\n        </div>\n        <PrivateComponent component={DropdownMenu} parent={posts[postIndex]} items={dropdownItems} />\n      </header>\n\n      <p className=\"post-content\">{decodeHtml(posts[postIndex].content)}</p>\n\n      <div className=\"post-data secondary-font-color\">\n        {\n          <LikeButton reactions={posts[postIndex].reactions} \n                      hidden={posts[postIndex].reactions.length === 0} />\n        }\n        {\n          commentsCount > 0 && \n            <button onClick={toggleCommentArea}>\n              {`${commentsCount} Comment${commentsCount > 1 ? 's' : ''}`}\n            </button>\n        }\n      </div>\n\n      <div className=\"post-btns secondary-font-color light-bold\">\n        {\n          posts[postIndex].reactions.find((reaction) => (\n            reaction.author.id === auth.user.id\n          ))\n            ? <button onClick={toggleLike} className=\"primary-font-color post-btn hovered-link\">\n                <i><IoMdThumbsUp /></i>\n                <span>Unlike</span>\n              </button>\n            : <button onClick={toggleLike} className=\"post-btn hovered-link\">\n                <i><FiThumbsUp /></i>\n                <span>Like</span>\n              </button>\n        }\n        <button onClick={onCommentClick} className=\"post-btn hovered-link\">\n          <i><VscComment /></i>\n          <span>Comment</span>\n        </button>\n      </div>\n      \n      {\n        // list of comments\n        enableComments\n         ? comments[posts[postIndex].id]?.length > 0\n            ? <CommentsList comments={comments[posts[postIndex].id].filter((comment) => (\n              comment.parent_id === posts[postIndex].id\n            ))} />\n            : <p className=\"no-data-msg\">Be the first to comment.</p>\n         : null\n      }\n\n      {\n        enableComments\n          ? <AddCommentForm type=\"comment\" \n                            parentId={posts[postIndex].id} \n                            profileId={posts[postIndex].destination_profile.id}\n                            postId={posts[postIndex].id}\n                            isFocused={isFocused}\n                            disableAddCommentFocus={disableAddCommentFocus} />\n          : null\n      }\n    </li>\n  );\n}\n\nPost.propTypes = {\n  comments: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addReaction: PropTypes.func.isRequired,\n  deleteReaction: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  enablePostForm: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  comments: state.comments,\n  auth: state.auth,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps, {\n  addReaction,\n  deleteReaction,\n  deletePost,\n  enablePostForm,\n})(Post);\n","import React from 'react';\nimport Post from './Post';\n\nexport default function PostsList({ posts }) {\n  return (\n    <ul>\n      {posts.map((post, index) => (\n        <Post key={post.id} postIndex={index} />\n      ))\n      }\n    </ul>\n  );\n}\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\n// redux actions\nimport { enablePostForm } from '../actions/overlaysActions';\n\n// stylesheets\nimport '../styles/AddPostSection.css';\n\nfunction AddPostSection({ user, auth, enablePostForm }) {\n  /* NOTE: if user is undefined, it implies the component is being used from\n  the Newsfeed page, meaning the profile where the post is added is the \n  authenticated user's */\n  \n  const displayPostForm = () => {\n    enablePostForm(null, user || auth.user);\n  };\n\n  return (\n    <section className=\"add-post-section primary-frame primary-bg-color secondary-font-color\">\n      <button onClick={displayPostForm} \n              className=\"secondary-bg-color secondary-frame secondary-bg-color-hover\">\n        {\n          !user || auth.user.id === user.id\n            ? `What's on your mind?`\n            : `Write something to ${user.first_name}...`\n        }\n      </button>\n    </section>\n  )\n}\n\nAddPostSection.propTypes = {\n  auth: PropTypes.object.isRequired,\n  enablePostForm: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { enablePostForm })(AddPostSection);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\n// stylesheet\nimport '../styles/ProfilePosts.css';\n\n// components\nimport PostsList from \"./PostsList\";\nimport AddPostSection from \"./AddPostSection\";\n\nfunction ProfilePosts({ user, friends, posts }) {\n  const friendsArr = Object.keys(friends).map((key) => friends[key]);\n  \n  return (\n    <>\n      <section className=\"snapshot\">\n        <article className=\"friends primary-frame primary-bg-color\">\n          <header>\n            <h2>Friends</h2>\n            <p className=\"friends-count secondary-font-color\">\n              {\n                `${friendsArr.length} friend${\n                  friendsArr.length > 1 \n                    ? 's' \n                    : ''\n                }`\n              }\n            </p>\n          </header>\n          {\n            friendsArr.length > 0\n              ? <ul>\n                  {friendsArr.slice(0, 9).map((friend) => (\n                    <li key={friend.username}>\n                      <a href={`/${friend.username}`}>\n                        <img src={friend.picture.url} \n                            alt=\"user's profile avatar\"\n                            className=\"friend-picture\" />\n                      </a>\n                      <a href={`/${friend.username}`}>\n                        <h6 className=\"light-bold\">{friend.name}</h6>\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              : <p className=\"no-data-msg\">There is no one here.</p>\n          }\n        </article>\n      </section>\n      \n      <section className=\"profile-posts\">\n        <AddPostSection user={user} />\n\n        <section>\n          <h2 className=\"primary-frame primary-bg-color\">Posts</h2>\n          {posts.length > 0\n          ? <PostsList posts={posts} />\n          : <p className=\"no-data-msg\">You don't have any posts yet.</p> \n          }\n        </section>\n      </section>\n    </>\n  )\n}\n\nProfilePosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  friends: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  friends: state.friends,\n});\n\nexport default connect(mapStateToProps)(ProfilePosts);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\n// bootstrap components\nimport Button from 'react-bootstrap/Button';\n\n// redux actions\nimport {\n  sendFriendRequest, \n  deleteFriend, \n  addFriend, \n  cancelFriendRequest,\n  declineFriendRequest\n} from \"../actions/friendActions\";\n\n// stylesheet\nimport '../styles/FriendButton.css';\n\nfunction FriendButton({ \n  parent,\n  auth, \n  sendFriendRequest, \n  deleteFriend,\n  addFriend,\n  declineFriendRequest,\n  cancelFriendRequest,\n  friends,\n  shortVersion\n}) {\n  // NOTE: shortVersion allows to only display add friend button\n\n  const handleAddFriend = () => {\n    const body = {\n      friendId: parent.id\n    };\n    \n    sendFriendRequest(body, auth.user.username);\n  };\n\n  const handleDeleteFriend = () => {\n    deleteFriend(auth.user, parent.id);\n  };\n\n  const handleAcceptRequest = () => {\n    const body = {\n      friendId: parent.id\n    };\n\n    addFriend(body, auth.user.username);\n  };\n\n  const handleDeclineRequest = () => {\n    declineFriendRequest(auth.user.username, parent.id);\n  };\n\n  const handleCancelRequest = () => {\n    cancelFriendRequest(auth.user.username, parent.id);\n  };\n\n  const renderFriendButton = () => {\n    if (auth.user.id !== parent.id) {\n      if (!shortVersion && friends[auth.user.id]) {\n        return <Button onClick={handleDeleteFriend}>Unfriend</Button>;\n      } else if (!shortVersion && auth.user.incomingFriendRequests[parent.id]) {\n        return (\n          <>\n            <Button onClick={handleAcceptRequest}>Accept request</Button>\n            <Button onClick={handleDeclineRequest} className=\"reg-display\">\n              Decline friend request\n            </Button>\n          </>\n        );\n      } else if (!shortVersion && auth.user.outgoingFriendRequests[parent.id]) {\n        return <Button onClick={handleCancelRequest}>Cancel request</Button>;\n      } else {\n        return <Button onClick={handleAddFriend}>Add as friend</Button>;\n      }\n    } else {\n      return null;\n    }\n  };\n  \n  return (\n    <>\n      {\n        renderFriendButton()\n      }\n    </>\n  )\n}\n\nFriendButton.propTypes = {\n  auth: PropTypes.object.isRequired,\n  sendFriendRequest: PropTypes.func.isRequired,\n  deleteFriend: PropTypes.func.isRequired,\n  addFriend: PropTypes.func.isRequired,\n  cancelFriendRequest: PropTypes.func.isRequired,\n  declineFriendRequest: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  friends: state.friends\n})\n\nconst mapDispatchToProps = {\n  sendFriendRequest,\n  deleteFriend,\n  addFriend,\n  cancelFriendRequest,\n  declineFriendRequest,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendButton)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// stylesheet\nimport '../styles/ProfileFriends.css';\n\n// redux actions\nimport { \n  deleteFriend, \n  deleteFriendFromAuth,\n  addFriendToAuth,\n  declineFriendRequest,\n  cancelFriendRequest,\n} from '../actions/friendActions';\n\n// components\nimport DropdownMenu from './DropdownMenu';\nimport FriendButton from './FriendButton';\n\nfunction ProfileFriends({ \n  friends, \n  deleteFriend, \n  auth, \n  user,\n  deleteFriendFromAuth,\n  addFriendToAuth,\n  declineFriendRequest,\n  cancelFriendRequest,\n}) {\n  const friendsArr = Object.keys(friends).map((key) => friends[key]);\n  \n  const handleUnfriend = (userId, friendId) => {\n    // check if unfriended user is displayed on authenticated user's profile\n    if (userId === auth.user.id) {\n      deleteFriend(auth.user, friendId);\n    } else {\n      deleteFriendFromAuth(auth.user, friendId);\n    }\n  };\n\n  const handleAcceptRequest = (friendId) => {\n    const body = {\n      friendId\n    };\n\n    addFriendToAuth(body, auth.user.username);\n  };\n\n  const handleDeclineRequest = (friendId) => {\n    declineFriendRequest(auth.user.username, friendId);\n  };\n\n  const handleCancelRequest = (friendId) => {\n    cancelFriendRequest(auth.user.username, friendId);\n  };\n\n  const getDropdownItems = (friend) => {\n    if (auth.user.friends[friend.id]) {\n      return [\n        {\n          label: \"Unfriend\",\n          function: () => {\n            handleUnfriend(user.id, friend.id);\n          }\n        }\n      ];\n    } else if (auth.user.incomingFriendRequests[friend.id]) {\n      return [\n        {\n          label: \"Accept friend request\",\n          function: () => {\n            handleAcceptRequest(friend.id);\n          }\n        },\n        {\n          label: \"Decline friend request\",\n          function: () => {\n            handleDeclineRequest(friend.id);\n          }\n        }\n      ];\n    } else if (auth.user.outgoingFriendRequests[friend.id]) {\n      return [\n        {\n          label: \"Cancel friend request\",\n          function: () => {\n            handleCancelRequest(friend.id);\n          }\n        }\n      ];\n    } else {\n      return [];\n    }\n  };\n  \n  return (\n    <section className=\"profile-friends primary-frame primary-bg-color\">\n      <header>\n        <h2>Friends</h2>\n      </header>\n      {\n        friendsArr.length > 0\n          ? <ul className=\"profile-friends-list\">\n              {\n                friendsArr.map((friend) => (\n                  <li key={friend.id} className=\"senary-frame\">\n                    <div className=\"friend-id-wrapper\">\n                      <a href={`/${friend.username}`} className=\"link-wrapper\">\n                        <img src={friend.picture.url} \n                            alt=\"user's profile avatar\"\n                            className=\"friend-picture\" />\n                      </a>\n                      <a href={`/${friend.username}`}>\n                        <h3>{friend.name}</h3>\n                      </a>\n                    </div>\n                    {\n                      // only display something if listed user is not \n                      // authenticated user, and display an add friend button\n                      // if listed user is not friends w/ authenticated user\n                      friend.id !== auth.user.id\n                        ? (\n                               !auth.user.friends[friend.id] \n                            && !auth.user.incomingFriendRequests[friend.id]\n                            && !auth.user.outgoingFriendRequests[friend.id]\n                          )\n                            ? <FriendButton shortVersion={true} parent={friend} />\n                            : <DropdownMenu items={getDropdownItems(friend)} />\n                        : null\n                    }\n                  </li>\n                ))\n              }\n            </ul>\n          : <p className=\"no-data-msg\">There is no one here.</p>\n      }\n    </section>\n  )\n}\n\nProfileFriends.propTypes = {\n  deleteFriend: PropTypes.func.isRequired,\n  friends: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteFriendFromAuth: PropTypes.func.isRequired,\n  addFriendToAuth: PropTypes.func.isRequired,\n  declineFriendRequest: PropTypes.func.isRequired,\n  cancelFriendRequest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  friends: state.friends,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { \n  deleteFriend,\n  deleteFriendFromAuth,\n  addFriendToAuth,\n  declineFriendRequest,\n  cancelFriendRequest,\n})(ProfileFriends);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { connect } from 'react-redux';\n\n// redux action type\nimport { CLEAR_ERRORS } from '../actions/types';\n\n// stylesheet\nimport '../styles/Error.css';\n\nfunction Error({ errors }) {\n  const dispatch = useDispatch();\n  const currentError = useRef(errors);\n\n  useEffect(() => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }, []);\n  \n  return (\n    <div className=\"error\">\n      <h1>An Error Has Occurred</h1>\n      <p>{currentError.current?.message}</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({ \n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(Error);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport { connect, useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Switch, Route, NavLink } from \"react-router-dom\";\n\n// stylesheet\nimport '../styles/Profile.css';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\n// redux actions\nimport { getPosts } from '../actions/postActions';\nimport { saveFriends } from \"../actions/friendActions\";\nimport { enableUploadPicture } from \"../actions/overlaysActions\";\n\n// icons\nimport { BsCameraFill } from 'react-icons/bs';\n\n// bootstrap components\nimport Spinner from 'react-bootstrap/Spinner';\n\n// components\nimport ProfilePosts from \"./ProfilePosts\";\nimport ProfileFriends from \"./ProfileFriends\";\nimport FriendButton from \"./FriendButton\";\nimport Error from \"./Error\";\n\nfunction Profile({ \n  match, \n  getPosts, \n  posts,\n  saveFriends,\n  auth,\n  enableUploadPicture,\n}) {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({});\n  const loading = useRef(true);\n  \n  // retrieve user info, posts, and comments upon mounting\n  useEffect(() => {\n    /* params property of the match object refers to parameters set in route URI\n    NOTE: API call is made locally rather than in redux action because the route\n    differs in each component where posts appear */\n    axios.get(`/api/users/${match.params.username}`).then((response) => {\n      loading.current = false;\n      \n      // save info about owner of profile displayed to local state\n      setUser(response.data.user);\n      \n      // save posts being displayed to redux store\n      getPosts(response.data.posts);\n      \n      // save friends to redux store\n      saveFriends(response.data.user.friends);\n    }).catch((err) => {\n      loading.current = false;\n\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  }, []);\n  \n  return (\n    <div className=\"profile\">\n      {\n        !loading.current\n          ? user.name !== undefined\n            ? <>\n                <header className=\"profile-header primary-bg-color quinary-frame\">\n                  <div>\n                    {\n                      user.username === auth.user.username\n                        ? <button onClick={enableUploadPicture} className=\"profile-upload-btn\">\n                            <img src={user.picture.url} \n                                alt=\"user's profile avatar\"\n                                className=\"user-picture\" />\n                            <div className=\"profile-upload-icon\">\n                              <BsCameraFill />\n                            </div>\n                          </button>\n                        : <img src={user.picture.url} \n                                alt=\"user's profile avatar\"\n                                className=\"user-picture\" />\n                    }\n                    <h1>{user.name}</h1>\n                  </div>\n                  <div className=\"profile-nav\">\n                    <ul className=\"navigation-links\">\n                      <li>\n                        <NavLink exact to={`/${user.username}`} \n                                activeClassName=\"selected\" \n                                className=\"nav-link hovered-link light-bold\">\n                          Posts\n                        </NavLink>\n                      </li>\n                      <li>\n                        <NavLink exact to={`/${user.username}/friends`} \n                                activeClassName=\"selected\" \n                                className=\"nav-link hovered-link light-bold\">\n                          Friends\n                        </NavLink>\n                      </li>\n                    </ul>\n                    <div className=\"friend-btn\">\n                      <FriendButton parent={user} />\n                    </div>\n                  </div>\n                </header>\n                <main>\n                  <Switch>\n                    <Route exact path=\"/:username\" render={() => (\n                      <ProfilePosts user={user} />\n                    )} />\n                    <Route path=\"/:username/friends\" render={() => (\n                      <ProfileFriends user={user} />\n                    )} />\n                    <Route path=\"/:username/*\" component={Error} />\n                  </Switch>\n                </main>\n              </>\n            : null\n          : <>\n              <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </Spinner>\n            </>\n      }\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  posts: PropTypes.array.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  saveFriends: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  enableUploadPicture: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { \n  getPosts, \n  saveFriends,\n  enableUploadPicture,\n})(Profile);","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// redux actions\nimport { login } from '../../actions/authActions';\n\n// bootstrap components\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n// redux actions\nimport { enableSignupForm } from \"../../actions/overlaysActions\";\n\n// stylesheet\nimport '../../styles/Login.css';\n\nfunction Login({ auth, errors, login, history, enableSignupForm }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // check whether user appears as logged in when component is mounted\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push('/');\n    }\n  }, []);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n    if (name === 'password') {\n      setPassword(value);\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const body = {\n      email,\n      password\n    };\n\n    login(body);\n  };\n\n  const handleLoginAsGuest = () => {\n    const body = {\n      email: \"guestuser@test.com\",\n      password: \"guestuser\"\n    };\n\n    login(body);\n  };\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"site-name primary-font-color\">odinbook</h1>\n      <section className=\"primary-frame primary-bg-color\">\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Group>\n            <Form.Control type=\"text\" \n                          name=\"email\"\n                          placeholder=\"Email\"\n                          value={email} \n                          onChange={onChange}\n                          isInvalid={errors?.data?.email} />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors?.data?.email?.msg}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group>\n            <Form.Control type=\"text\" \n                          name=\"password\"\n                          placeholder=\"Password\"\n                          value={password}\n                          onChange={onChange}\n                          isInvalid={errors?.data?.password} />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors?.data?.password?.msg}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <button className=\"tertiary-bg-color tertiary-font-color validation-btn\"\n                  type=\"submit\">\n            Log In\n          </button>\n        </Form>\n\n        <button className=\"tertiary-bg-color tertiary-font-color validation-btn guest-btn\"\n                onClick={handleLoginAsGuest}>\n          Log In As Guest\n        </button>\n\n        <hr />\n\n        <div className=\"signup-wrapper\">\n          <Button className=\"signup-btn\" \n                  variant=\"success\" \n                  onClick={enableSignupForm}>\n            Create new account\n          </Button>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  enableSignupForm: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, { \n  login, \n  enableSignupForm \n})(withRouter(Login));","import { \n  USER_LOGOUT, \n  USER_LOGIN, \n  GET_ERRORS, \n  RESET_POSTS, \n  RESET_COMMENTS, \n  DISABLE_SIGNUP_FORM,\n  DISABLE_POST_FORM,\n  DISABLE_REACTIONS_LIST,\n  CLEAR_ERRORS\n} from './types';\nimport axios from 'axios';\n\nexport const register = (body, history) => dispatch => {\n  axios.post('/api/auth/register', body).then((response) => {\n    // delete potential errors stored in redux store\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n\n    // close sign up form\n    dispatch({\n      type: DISABLE_SIGNUP_FORM\n    });\n\n    // if successful, display success message with link to log in\n    history.push('/');\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const login = (body) => dispatch => {\n  axios.post('/api/auth/login', body).then((response) => {\n    // delete potential errors stored in redux store\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n\n    dispatch({\n      type: USER_LOGIN,\n      payload: response.data\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const logout = (history) => dispatch => {\n  axios.get('/api/auth/logout').then((response) => {\n    dispatch({\n      type: USER_LOGOUT\n    });\n\n    dispatch({\n      type: RESET_POSTS\n    });\n\n    dispatch({\n      type: RESET_COMMENTS\n    });\n\n    dispatch({\n      type: DISABLE_SIGNUP_FORM\n    });\n\n    dispatch({\n      type: DISABLE_POST_FORM\n    });\n\n    dispatch({\n      type: DISABLE_REACTIONS_LIST\n    });\n\n    history.push('/');\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const verifyAuth = () => dispatch => {\n  axios.get('/api/auth/verify').then((response) => {\n    dispatch({\n      type: USER_LOGIN,\n      payload: response.data\n    });\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n\nexport const deleteAccount = (username, history) => dispatch => {\n  axios.delete(`/api/users/${username}`).then((response) => {\n    dispatch({\n      type: USER_LOGOUT\n    });\n\n    dispatch({\n      type: RESET_POSTS\n    });\n\n    dispatch({\n      type: RESET_COMMENTS\n    });\n\n    history.push('/');\n  }).catch((err) => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response\n    });\n  });\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect, useDispatch } from 'react-redux'\nimport { v4 as uuid } from 'uuid';\n\n// redux action types\nimport { CLEAR_ACTION } from '../actions/types';\n\n// stylesheet\nimport '../styles/FriendsList.css';\n\n// bootstrap components\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction FriendsList({ \n  friends, \n  heading,\n  getApiData,\n  action,\n  buttonItems,\n}) {\n\n  const dispatch = useDispatch();\n  \n  // store global friends object locally as an array\n  const [friendsArr, setFriendsArray] = useState([]);\n\n  const loading = useRef(true);\n  \n  // store action object in redux state when component mounts to be able to\n  // compare it with future changes\n  const actionObj = useRef(action);\n\n  useEffect(() => {\n    getApiData();\n  }, []);\n  \n  useEffect(() => {\n    // detect when action creator above has updated redux store\n    if (JSON.stringify(actionObj.current) !== JSON.stringify(action)) {\n      loading.current = false;\n      setFriendsArray(Object.keys(friends).map((key) => friends[key]));\n      dispatch({ type: CLEAR_ACTION });\n    }\n  }, [action]);\n\n  useEffect(() => {\n    setFriendsArray(Object.keys(friends).map((key) => friends[key]));\n  }, [friends])\n  \n  return (\n    <>\n      {\n        loading.current\n          ? <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n          : <>\n              <h2>{heading}</h2>\n              <ul className=\"friends-list\">\n                {\n                  friendsArr.length > 0\n                    ? friendsArr.map((friend) => (\n                        <li key={friend.username} \n                            className=\"septenary-frame primary-bg-color\">\n                          <a href={`/${friend.username}`} className=\"link-wrapper\">\n                            <img src={friend.picture.url} \n                                alt=\"user's profile avatar\" />\n                          </a>\n                          <div className=\"bottom\">\n                            <a href={`/${friend.username}`}>\n                              <h3 className=\"regular-bold\">{friend.name}</h3>\n                            </a>\n                            {\n                              buttonItems.map((button) => (\n                                <Button key={uuid()} \n                                        {...button.props} \n                                        onClick={() => {\n                                          button.function(friend.id);\n                                        }}\n                                        className=\"light-bold\">\n                                  {button.label}\n                                </Button>\n                              ))\n                            }\n                          </div>\n                        </li>\n                    ))\n                    : <p>There is no one here.</p> \n                }\n              </ul>\n            </>\n      }\n    </>\n  )\n}\n\nFriendsList.propTypes = {\n  friends: PropTypes.object.isRequired,\n  heading: PropTypes.string.isRequired,\n  action: PropTypes.object.isRequired,\n  getApiData: PropTypes.func.isRequired,\n  buttonItems: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  friends: state.friends,\n  action: state.action,\n})\n\nexport default connect(mapStateToProps)(FriendsList)\n","import React, { useState } from 'react'\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\n\n// stylesheet\nimport '../styles/AccountDashboard.css';\n\nimport Error from './Error';\n\nexport default function AccountDashboard({ heading, mainItems, navItems, className }) {\n  const [showNav, setShowNav] = useState(false);\n\n  const toggleNavigation = () => {\n    setShowNav(!showNav);\n  };\n\n  return (\n    <div className={`account-dashboard ${className}`}>\n      <aside className=\"quinary-frame primary-bg-color\">\n        <header>\n          <h1>{heading}</h1>\n          <div className=\"sm-display toggle-btn\">\n            <button onClick={toggleNavigation} \n                    className={`burger-btn${showNav ? ' open' : ''}`}>\n              <div className=\"burger-icon\"></div>\n            </button>\n          </div>\n        </header>\n        <ul className={showNav ? 'show' : undefined}>\n          {\n            navItems.map((item) => (\n              <li key={uuid()}>\n                <NavLink exact to={item.path} \n                        activeClassName=\"selected\"\n                        {...item.props} >\n                  <i><item.icon /></i>\n                  <h6>{item.heading}</h6>\n                </NavLink>\n              </li>\n            ))\n          }\n        </ul>\n      </aside>\n      <main className=\"primary-bg-color quinary-frame\">\n        <Switch>\n          {\n            mainItems.map((item, index) => (\n              <Route key={index} exact={index === 0} path={item.path} render={(props) => (\n                <item.component {...props} {...item.componentProps} />\n              )} />\n            ))\n          }\n          <Route path={`${mainItems[0].path}/*`} component={Error} />\n        </Switch>\n      </main>\n    </div>\n  )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// stylesheet\nimport '../styles/FriendsDashboard.css';\n\n// bootstrap components\nimport { FaUserFriends } from 'react-icons/fa';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\n// redux actions\nimport { \n  getFriends,\n  getIncomingFriendRequests,\n  deleteFriend,\n  addFriendToAuth,\n  declineFriendRequest,\n} from '../actions/friendActions';\n\n// react action types\nimport { DELETE_FRIEND } from '../actions/types';\n\n// react components\nimport FriendsList from './FriendsList';\nimport AccountDashboard from './AccountDashboard';\n\n/* this component is only meant to display the authenticated user's friends\nwithin his/her account. A separate component should be used to display any \nuser's friends */\nfunction FriendsDashboard({ \n  auth, \n  getFriends,\n  getIncomingFriendRequests,\n  deleteFriend,\n  addFriendToAuth,\n  declineFriendRequest,\n  errors,\n}) {\n\n  const dispatch = useDispatch();\n\n  const handleAddFriend = (parentId) => {\n    const body = {\n      friendId: parentId\n    };\n    \n    addFriendToAuth(body, auth.user.username);\n\n    dispatch({\n      type: DELETE_FRIEND,\n      payload: {\n        userId: auth.user.id,\n        friendId: parentId\n      }\n    });\n  };\n\n  const handleDeleteFriend = (parentId) => {\n    deleteFriend(auth.user, parentId);\n  };\n\n  const handleDeclineRequest = (parentId) => {\n    declineFriendRequest(auth.user.username, parentId);\n\n    dispatch({\n      type: DELETE_FRIEND,\n      payload: {\n        userId: auth.user.id,\n        friendId: parentId\n      }\n    });\n  };\n\n  const navItems = [\n    {\n      path: \"/friends\",\n      props: {\n        className: \"dashboard-link sidebar-link hovered-link\"\n      },\n      icon: FaUserFriends,\n      heading: \"All Friends\"\n    },\n    {\n      path: \"/friends/requests\",\n      props: {\n        className: \"dashboard-link sidebar-link hovered-link\"\n      },\n      icon: BsFillPersonPlusFill,\n      heading: \"Friend Requests\"\n    },\n  ];\n\n  const mainItems = [\n    {\n      path: \"/friends\",\n      component: FriendsList,\n      componentProps: {\n        heading: \"All Friends\",\n        getApiData: () => {\n          getFriends(auth.user.username);\n        },\n        buttonItems: [\n          {\n            label: \"Unfriend\",\n            function: handleDeleteFriend\n          }\n        ]\n      }\n    },\n    {\n      path: \"/friends/requests\",\n      component: FriendsList,\n      componentProps: {\n        heading: \"Friend Requests\",\n        getApiData: () => {\n          getIncomingFriendRequests(auth.user.username);\n        },\n        buttonItems: [\n          {\n            label: \"Accept\",\n            function: handleAddFriend\n          },\n          {\n            label: \"Decline\",\n            function: handleDeclineRequest,\n            props: {\n              className: \"secondary-bg-color\"\n            }\n          }\n        ]\n      }\n    }\n  ];\n\n  return (\n    <AccountDashboard heading=\"Friends\" \n                      navItems={navItems} \n                      mainItems={mainItems}\n                      className=\"friends-dashboard\" />\n  );\n}\n\nFriendsDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getFriends: PropTypes.func.isRequired,\n  getIncomingFriendRequests: PropTypes.func.isRequired,\n  deleteFriend: PropTypes.func.isRequired,\n  addFriendToAuth: PropTypes.func.isRequired,\n  declineFriendRequest: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    errors: state.errors,\n    action: state.action\n  };\n};\n\nconst mapDispatchToProps = {\n  getFriends,\n  getIncomingFriendRequests,\n  deleteFriend,\n  addFriendToAuth,\n  declineFriendRequest,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsDashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n//stylesheets\nimport '../styles/HomeSidebar.css';\n\n// icons\nimport { IoPeopleCircleOutline } from 'react-icons/io5';\n\nfunction Sidebar({ auth }) {\n  return (\n    <aside className=\"home-sidebar\">\n      <ul>\n        <li>\n          <Link to={`/${auth.user.username}`}\n                className=\"hovered-link secondary-bg-color-hover sidebar-link\">\n            <img src={auth.user.picture.url} \n                 alt=\"user's profile avatar\"\n                 className=\"user-picture\" />\n            <h6>{auth.user.name}</h6>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/friends\" \n                className=\"hovered-link secondary-bg-color-hover sidebar-link\">\n            <i className=\"primary-font-color\"><IoPeopleCircleOutline /></i>\n            <h6>Friends</h6>\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  )\n}\n\nSidebar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\n// redux actions\nimport { getPosts } from '../actions/postActions';\n\n// stylesheets\nimport '../styles/Newsfeed.css';\n\n// react components\nimport AddPostSection from './AddPostSection';\nimport HomeSidebar from './HomeSidebar';\nimport PostsList from './PostsList';\n\n// bootstrap components\nimport Spinner from 'react-bootstrap/Spinner';\n\n// component to display recent posts by any user on the platform\nfunction Newsfeed({ auth, getPosts, posts }) {\n  const dispatch = useDispatch();\n  \n  const loading = useRef(true);\n\n  // retrieve recent posts from API upon mounting\n  useEffect(() => {\n    /* NOTE: API call is made locally rather than in redux action because the \n    route differs in each component where posts appear */\n    axios.get('/api/posts?recent=true').then((response) => {\n      loading.current = false;\n      \n      // save posts being displayed to redux store\n      getPosts(response.data);\n    }).catch((err) => {\n      loading.current = false;\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"newsfeed\">\n      <HomeSidebar />\n\n      <main>\n        <AddPostSection />\n        \n        {\n          loading.current\n            ? <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </Spinner>\n            : posts.length > 0\n                ? <PostsList posts={posts} />\n                : <p className=\"no-data-msg\">\n                    It looks like no one has posted anything yet.\n                  </p>\n        }\n      </main>\n\n      <div className=\"invisible\"></div>\n    </div>\n  );\n}\n\nNewsfeed.propTypes = {\n  auth: PropTypes.object.isRequired,\n  posts: PropTypes.array.isRequired,\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    posts: state.posts\n  };\n};\n\nexport default connect(mapStateToProps, { getPosts })(Newsfeed);\n","import React, { useState, useRef } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter, NavLink, Link } from 'react-router-dom';\nimport { logout } from '../actions/authActions';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\n// stylesheet\nimport '../styles/Navbar.css';\n\n// icons\nimport { \n  IoHomeOutline, \n  IoHomeSharp, \n  IoPeopleOutline, \n  IoPeopleSharp,\n  IoLogOut,\n} from 'react-icons/io5';\nimport { IoMdSettings } from 'react-icons/io';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { BsArrowLeft } from 'react-icons/bs';\n\n// bootstrap components\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Spinner from 'react-bootstrap/Spinner';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\nfunction Navbar({ logout, history, auth }) {\n  const dispatch = useDispatch();\n  const [searchResults, setSearchResults] = useState([]);\n  const loading = useRef(false);\n  const searchInputEl = useRef();\n  \n  const onLogoutClick = () => {\n    logout(history);\n  };\n\n  const handleSearchInputFocus = () => {\n    setTimeout(() => {\n      searchInputEl.current.focus();\n    }, 250)\n  };\n\n  const handleSearch = (e) => {\n    if (e.target.value !== '') {\n      // display loading animation until API call is completed\n      loading.current = true;\n\n      axios.get(`/api/users?name=${e.target.value}`).then((response) => {\n        loading.current = false;\n        setSearchResults(response.data.slice(0, 8));\n      }).catch((err) => {\n        loading.current = false;\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response\n        });\n      });\n    } else {\n      setSearchResults([]);\n    }\n  };\n\n  const handleCloseDropdown = () => {\n    // simulate click outside menu to trigger bootstrap built-in function\n    document.querySelector('body').click();\n  };\n  \n  return (\n    <nav className=\"nav-bar primary-bg-color quinary-frame\">\n      <div className=\"search\">\n        <Link to=\"/\">\n          <i className=\"site-icon primary-font-color reg-display\">Odinbook</i>\n          <i className=\"site-icon tertiary-font-color tertiary-bg-color sm-display\">\n            0\n          </i>\n        </Link>\n        <Dropdown className=\"search-btn\">\n          <Dropdown.Toggle>\n            <i className=\"secondary-bg-color search-icon secondary-font-color\"\n            onClick={handleSearchInputFocus}>\n              <AiOutlineSearch />\n            </i>\n          </Dropdown.Toggle>\n          \n          <Dropdown.Menu>\n            <div className=\"top\">\n              <button className=\"return-btn secondary-font-color secondary-bg-color-hover\"\n                      onClick={handleCloseDropdown}>\n                <i><BsArrowLeft /></i>\n              </button>\n              <input onChange={handleSearch} \n                    type=\"text\" \n                    placeholder=\"Search Odinbook\"\n                    className=\"secondary-bg-color secondary-frame\"\n                    ref={searchInputEl} />\n            </div>\n            <ul>\n              {\n                loading.current\n                  ? <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                  : searchResults.map((user) => (\n                      <li key={user.id}>\n                        <Dropdown.Item href={`/${user.username}`}>\n                          <img src={user.picture.url} \n                                alt=\"user's profile avatar\"\n                                className=\"user-picture\" />\n                          <h6>{user.name}</h6>\n                        </Dropdown.Item>\n                      </li>\n                    ))\n              }\n            </ul>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n\n      <ul className=\"navigation-links\">\n        <li>\n          <NavLink exact to=\"/\" activeClassName=\"selected\" className=\"nav-link hovered-link\">\n            <i className=\"icon outline\"><IoHomeOutline /></i>\n            <i className=\"icon filled\"><IoHomeSharp /></i>\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/friends\" activeClassName=\"selected\" className=\"nav-link hovered-link\">\n            <i className=\"icon outline\"><IoPeopleOutline /></i>\n            <i className=\"icon filled\"><IoPeopleSharp /></i>\n          </NavLink>\n        </li>\n      </ul>\n      \n      <div className=\"navigation-buttons\">\n        <Dropdown>\n          <Dropdown.Toggle variant=\"secondary\"></Dropdown.Toggle>\n          \n          <Dropdown.Menu variant=\"light\">\n            <ul>\n              <li>\n                <Dropdown.Item href={`/${auth.user.username}`} className=\"top-link hovered-link\">\n                  <img src={auth.user.picture.url} \n                        alt=\"user's profile avatar\"\n                        className=\"user-picture\" />\n                  <div>\n                    <h2>{auth.user.name}</h2>\n                    <p className=\"secondary-font-color\">See your profile</p>\n                  </div>\n                </Dropdown.Item>\n                <hr className=\"secondary-font-color\" />\n              </li>\n              {\n                auth.user.username !== 'guestuser'\n                  && <li>\n                      <Dropdown.Item href=\"/settings\" className=\"dropdown-btn hovered-link\">\n                        <i><IoMdSettings /></i>\n                        <h6>Settings</h6>\n                      </Dropdown.Item>\n                    </li>\n              }\n              <li>\n                <Dropdown.Item onClick={onLogoutClick} className=\"dropdown-btn hovered-link\">\n                  <i><IoLogOut /></i>\n                  <h6>Log out</h6>\n                </Dropdown.Item>\n              </li>\n            </ul>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, { logout })(withRouter(Navbar));\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// template component for all components for which authentication should be\n// verified prior to rendering\nfunction PrivateRoute({ component: Component, auth, ...rest }) {\n  return (\n    <Route {...rest} render={(props) => {\n      if (auth.isAuthenticated) {\n        return <Component {...props} />\n      }\n      return <Redirect to=\"/\" />\n    }} />\n  );\n}\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport decodeHtml from '../utils/htmlDecoder';\n\n// bootstrap components\nimport Modal from 'react-bootstrap/Modal';\n\n// stylesheets\nimport '../styles/PostForm.css';\n\n// redux actions\nimport { updatePost, addPost } from '../actions/postActions';\nimport { disablePostForm } from '../actions/overlaysActions';\n\n// redux action types\nimport { CLEAR_ACTION } from '../actions/types';\n\nfunction PostForm({  \n  updatePost, \n  auth, \n  addPost,\n  disablePostForm,\n  overlays: { postForm, ...otherKeys},\n  action,\n}) {\n\n  const [postContent, setPostContent] = useState(postForm?.post?.content || '');\n  const submitBtn = useRef();\n  const dispatch = useDispatch();\n\n  // store action object in redux state when component mounts to be able to\n  // compare it with future changes\n  const actionObj = useRef(action);\n\n  useEffect(() => {\n    if (postContent === '') {\n      submitBtn.current.disabled = true;\n    } else {\n      submitBtn.current.disabled = false;\n    }\n  }, [postContent]);\n\n  const onContentChange = (e) => {\n    setPostContent(e.target.value);\n  };\n\n  useEffect(() => {\n    // detect when action creator above has updated redux store\n    if (JSON.stringify(actionObj.current) !== JSON.stringify(action)) {\n      /* once new post creation is confirmed, disable post form, which will\n      trigger re-render of parent component (Newsfeed.js/Profile.js) where\n      getPosts is called */\n      disablePostForm();\n      \n      dispatch({ type: CLEAR_ACTION });\n    }\n  }, [action]);\n\n  const handlePostSubmit = (e) => {\n    e.preventDefault();\n\n    if (postForm.post) { // implies post already exists in DB\n      const updatedPost = {...postForm.post};\n      updatedPost.content = postContent;\n      updatePost(updatedPost);\n    } else {\n      const body = {\n        profileId: postForm.profile.id,\n        content: postContent\n      };\n\n      addPost(body);\n    }\n  };\n\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title as={\"h2\"}>\n          {`${postForm.post ? 'Edit' : 'Create'} Post`}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body as={\"form\"} onSubmit={handlePostSubmit} className=\"post-form\">\n        <div className=\"user\">\n          <a href={`/${auth.user.username}`} rel=\"author\" className=\"left\">\n            <img src={auth.user.picture.url} \n                alt=\"user's profile avatar\"\n                className=\"user-picture\" />\n          </a>\n          <h3>{auth.user.name}</h3>\n        </div>\n        <textarea type=\"text\" \n                placeholder={\n                  postForm.profile.id === auth.user.id\n                    ? `What's on your mind?`\n                    : `Write something to ${postForm.profile.first_name}...`\n                }\n                value={decodeHtml(postContent)}\n                onChange={onContentChange}\n                required></textarea>\n        <button ref={submitBtn} \n                type=\"submit\" \n                className=\"tertiary-bg-color tertiary-font-color validation-btn\" \n                disabled>\n          {postForm.post ? 'Save' : 'Post'}\n        </button>\n      </Modal.Body>\n    </>\n  )\n}\n\nPostForm.propTypes = {\n  updatePost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  addPost: PropTypes.func.isRequired,\n  overlays: PropTypes.object.isRequired,\n  disablePostForm: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  overlays: state.overlays,\n  action: state.action,\n});\n\nexport default connect(mapStateToProps, { \n  updatePost, \n  addPost,\n  disablePostForm,\n})(PostForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// bootstrap components\nimport Modal from 'react-bootstrap/Modal';\n\n// stylesheet\nimport '../styles/ReactionsList.css';\n\nfunction ReactionsList({ overlays }) {\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title as={\"h2\"}>Likes</Modal.Title>\n      </Modal.Header>\n      <Modal.Body as={'ul'} className=\"reactions-list\">\n        {\n          overlays.reactionsList.reactions.map((reaction) => (\n            <li key={reaction._id}>\n              <div className=\"user\">\n                <a href={`/${reaction.author.username}`}>\n                  <img src={reaction.author.picture.url} \n                        alt=\"user's profile avatar\"\n                        className=\"user-picture\" />\n                </a>\n                <a href={`/${reaction.author.username}`}>\n                  <h3>{reaction.author.name}</h3>\n                </a>\n              </div>\n            </li>\n          ))\n        }\n      </Modal.Body>\n    </>\n  )\n}\n\nReactionsList.propTypes = {\n  overlays: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  overlays: state.overlays\n});\n\nexport default connect(mapStateToProps)(ReactionsList);\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// redux actions\nimport { register } from '../../actions/authActions';\n\n// bootstrap components\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n// stylesheet\nimport '../../styles/Register.css';\n\nfunction Register({ auth, errors, register, history }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  // check whether user appears as logged in when component is mounted\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push('/');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'username':\n        setUsername(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'first-name':\n        setFirstName(value);\n        break;\n      case 'last-name':\n        setLastName(value);\n        break;\n      default:\n        return;\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const body = {\n      username,\n      password,\n      email,\n      firstName,\n      lastName\n    };\n\n    register(body, history);\n  };\n  \n  return (\n    <>\n      <Modal.Header closeButton>\n        <div>\n          <Modal.Title as={\"h2\"}>Sign Up</Modal.Title>\n          <p>It's quick and easy.</p>\n        </div>\n      </Modal.Header>\n      <Modal.Body as={\"form\"} onSubmit={handleSubmit} className=\"signup-form\">\n        <Form.Group>\n          <Form.Control type=\"text\" \n                        name=\"first-name\"\n                        placeholder=\"First name\"\n                        value={firstName}\n                        onChange={onChange}\n                        isInvalid={errors?.data?.firstName} />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.data?.firstName?.msg}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type=\"text\" \n                        name=\"last-name\"\n                        placeholder=\"Last name\"\n                        value={lastName}\n                        onChange={onChange}\n                        isInvalid={errors?.data?.lastName} />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.data?.lastName?.msg}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type=\"text\" \n                        name=\"username\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={onChange}\n                        isInvalid={errors?.data?.username} />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.data?.username?.msg}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type=\"text\" \n                        name=\"email\"\n                        placeholder=\"Email\"\n                        value={email} \n                        onChange={onChange}\n                        isInvalid={errors?.data?.email} />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.data?.email?.msg}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Control type=\"text\" \n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onChange}\n                        isInvalid={errors?.data?.password} />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors?.data?.password?.msg}\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button className=\"signup-btn\" variant=\"success\" type=\"submit\">\n          Sign Up\n        </Button>\n      </Modal.Body>\n    </>\n  )\n};\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    errors: state.errors,\n  };\n};\n\nconst mapDispatchToProps = {\n  register,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Register));\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\n// redux actions\nimport { deleteAccount } from '../actions/authActions';\n\n// redux action types\nimport { UPDATE_USER } from '../actions/types';\n\n// stylesheet\nimport '../styles/AccountInfoItem.css';\n\n// bootstrap components\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nfunction AccountInfoItem({ \n  heading, \n  content, \n  btnLabel,\n  deleteAccount,\n  auth,\n  history\n}) {\n  const [showForm, setShowForm] = useState(false);\n  const [formInput, setFormInput] = useState({});\n  /* handle errors locally to prevent re-render of parent component, which\n  causes present component to remount without allowing user to make \n  corrections */\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n\n  // update object in local state based on the type of content passed in\n  useEffect(() => {\n    switch (heading) {\n      case \"Name\":\n        setFormInput(content);\n        break;\n      case \"Email address\":\n        setFormInput({ email: content });\n        break;\n      case \"Password\":\n        setFormInput({ password: content });\n        break;\n      default:\n        return;\n    }\n\n    return () => {\n      setErrors({});\n    };\n  }, []);\n\n  const onInputChange = (e) => {\n    setFormInput({\n      ...formInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const toggleFormDisplay = () => {\n    setShowForm(!showForm);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    axios.put(`/api/users/${auth.user.username}`, formInput)\n        .then((response) => {\n          dispatch({\n            type: UPDATE_USER,\n            payload: response.data\n          });\n\n          // close form since update was successful\n          toggleFormDisplay();\n        }).catch((err) => {\n          setErrors(err.response);\n        });\n  };\n\n  const renderFormContent = () => {\n    switch (heading) {\n      case \"Name\":\n        return (\n          <>\n            <label className=\"secondary-font-color light-bold\">\n              <span>First</span>\n              <Form.Control type=\"text\"\n                            placeholder=\"First name\"\n                            name=\"firstName\"\n                            value={formInput.firstName}\n                            onChange={onInputChange}\n                            isInvalid={errors?.data?.firstName} />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors?.data?.firstName?.msg}\n              </Form.Control.Feedback>\n            </label>\n            <label className=\"secondary-font-color light-bold\">\n              <span>Last</span>\n              <Form.Control type=\"text\" \n                    placeholder=\"Last name\"\n                    name=\"lastName\"\n                    value={formInput.lastName}\n                    onChange={onInputChange}\n                    isInvalid={errors?.data?.lastName} />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors?.data?.lastName?.msg}\n              </Form.Control.Feedback>\n            </label>\n            <div className=\"validation\">\n              <Button onClick={handleFormSubmit}>Submit</Button>\n              <Button variant=\"secondary\" onClick={toggleFormDisplay}>\n                Cancel\n              </Button>\n            </div>\n          </>\n        );\n\n      case \"Email address\":\n        return (\n          <>\n            <Form.Control type=\"email\" \n                    placeholder=\"Email address\"\n                    name=\"email\"\n                    value={formInput.email}\n                    onChange={onInputChange}\n                    isInvalid={errors?.data?.email} />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors?.data?.email?.msg}\n            </Form.Control.Feedback>\n            <div className=\"validation\">\n              <Button onClick={handleFormSubmit}>Submit</Button>\n              <Button variant=\"secondary\" onClick={toggleFormDisplay}>\n                Cancel\n              </Button>\n            </div>\n          </>\n        );\n\n      case \"Password\":\n        return (\n          <>\n            <Form.Control type=\"text\" \n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={formInput.password}\n                    onChange={onInputChange}\n                    isInvalid={errors?.data?.password} />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors?.data?.password?.msg}\n            </Form.Control.Feedback>\n            <div className=\"validation\">\n              <Button onClick={handleFormSubmit}>Submit</Button>\n              <Button variant=\"secondary\" onClick={toggleFormDisplay}>\n                Cancel\n              </Button>\n            </div>\n          </>\n        );\n\n      case \"Account management\":\n        return (\n          <>\n            <p>Are you sure you want to delete your account?</p>\n            <div className=\"validation\">\n              <Button variant=\"danger\" onClick={() => {\n                deleteAccount(auth.user.username, history);\n              }}>\n                Delete my account\n              </Button>\n              <Button variant=\"secondary\" onClick={toggleFormDisplay}>\n                Cancel\n              </Button>\n            </div>\n          </>\n        );\n\n      default:\n        return (\n          <>\n          </>\n        );\n    }\n  };\n  \n  return (\n    <li className=\"account-info-item\">\n      {\n        showForm\n          ? <form className=\"sub-wrapper secondary-bg-color\">\n              <h3>{heading}</h3>\n              <Form.Group className={\n                `content ${\n                  heading === 'Account management' \n                    ? 'account-management' \n                    : ''\n                }`\n              }>\n                {renderFormContent()}\n              </Form.Group>\n            </form>\n          : <div className=\"info-display sub-wrapper hovered-link\" \n                  onClick={toggleFormDisplay}>\n              <h3>{heading}</h3>\n              <p className=\"content\">\n                {formInput[Object.keys(formInput)[0]] || \"\"}\n              </p>\n              <button className=\"primary-font-color expand-btn\">\n                {btnLabel}\n              </button>\n            </div>\n      }\n    </li>\n  )\n}\n\nAccountInfoItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nconst mapDispatchToProps = {\n  deleteAccount,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AccountInfoItem));","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect, useDispatch } from 'react-redux'\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\n\n// stylesheet\nimport '../styles/AccountInfo.css';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\n// react components\nimport AccountInfoItem from './AccountInfoItem'\n\nfunction AccountInfo({ heading, auth }) {\n  const dispatch = useDispatch();\n  const [infoItems, setInfoItems] = useState([]);\n  \n  useEffect(() => {\n    axios.get(`/api/users/${auth.user.username}?accountInfo=true`)\n         .then((response) => {\n            setInfoItems([\n              {\n                heading: \"Name\",\n                content: {\n                  name: response.data.name,\n                  firstName: response.data.first_name,\n                  lastName: response.data.last_name\n                },\n                btnLabel: \"Edit\"\n              },\n              {\n                heading: \"Email address\",\n                content: response.data.email,\n                btnLabel: \"Edit\"\n              },\n              {\n                heading: \"Password\",\n                content: \"\",\n                btnLabel: \"Update\"\n              },\n              {\n                heading: \"Account management\",\n                btnLabel: \"View\"\n              },\n            ]);\n         }).catch((err) => {\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response\n          });\n        });\n  }, []);\n  \n  return (\n    <>\n      <h2>{heading}</h2>\n      <ul className=\"account-info-list\">\n        {\n          infoItems.map((item) => (\n            <AccountInfoItem heading={item.heading}\n                              content={item.content}\n                              btnLabel={item.btnLabel}\n                              key={uuid()} />\n          ))\n        }\n      </ul>\n    </>\n  )\n}\n\nAccountInfo.propTypes = {\n  heading: PropTypes.string.isRequired,\n  auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps)(AccountInfo)\n","import React from 'react';\n\n// react components\nimport AccountDashboard from './AccountDashboard';\nimport AccountInfo from './AccountInfo';\n\n// icons\nimport { FcSettings } from 'react-icons/fc';\n\nexport default function SettingsDashboard() {\n\n  const navItems = [\n    {\n      path: \"/settings\",\n      props: {\n        className: \"dashboard-link sidebar-link hovered-link\"\n      },\n      icon: FcSettings,\n      heading: \"General\"\n    }\n  ];\n\n  const mainItems = [\n    {\n      path: \"/settings\",\n      component: AccountInfo,\n      componentProps: {\n        heading: \"General Account Settings\"\n      }\n    }\n  ];\n\n  return (\n    <AccountDashboard className=\"settings-dashboard\"\n                      navItems={navItems}\n                      mainItems={mainItems}\n                      heading=\"Settings\" />\n  )\n}\n","// function copied from react-image-crop docs\n\nexport function getCroppedImg(image, crop) {\n  const canvas = document.createElement(\"canvas\");\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext(\"2d\");\n\n  // New lines to be added\n  const pixelRatio = window.devicePixelRatio;\n  canvas.width = crop.width * pixelRatio;\n  canvas.height = crop.height * pixelRatio;\n  ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  ctx.imageSmoothingQuality = \"high\";\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width,\n    crop.height\n  );\n\n  // As Base64 string\n  // const base64Image = canvas.toDataURL(\"image/jpeg\");\n  // return base64Image;\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(\n      (blob) => {\n        resolve(blob);\n      },\n      \"image/jpeg\",\n      1\n    );\n  });\n}","import React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { getCroppedImg } from '../utils/imageProcessing';\nimport axios from 'axios';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// bootstrap components\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n// stylesheets\nimport 'react-image-crop/dist/ReactCrop.css';\nimport '../styles/UploadPicture.css';\n\n// redux action types\nimport { GET_ERRORS } from '../actions/types';\n\nfunction UploadPicture({ auth }) {\n  const dispatch = useDispatch();\n\n  const [showCropTool, setShowCropTool] = useState(false);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [image, setImage] = useState(null);\n  const [crop, setCrop] = useState({aspect:1/1});\n\n  const toggleInputDisplay = () => {\n    setShowCropTool(!showCropTool);\n  };\n\n  const handleInputChange = (e) => {\n    setImgSrc(URL.createObjectURL(e.target.files[0]));\n    toggleInputDisplay();\n  };\n\n  const handleImageUpload = async (e) => {\n    // apply selected crop to original image uploaded\n    const croppedImg = await getCroppedImg(image, crop);\n\n    let data = new FormData();\n    data.append('image', croppedImg);\n\n    const config = {\n      header: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    \n    axios.put(`/api/users/${auth.user.username}/profile-picture`, data, config)\n         .then((response) => {\n            window.location.reload(true);\n        }).catch((err) => {\n            dispatch({\n              type: GET_ERRORS,\n              payload: err\n            });\n          });\n  }\n  \n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title as={\"h2\"}>Upload Profile Picture</Modal.Title>\n      </Modal.Header>\n      <Modal.Body as={'form'} \n                  encType=\"multipart/form-data\" \n                  className=\"upload-form\">\n        {\n          showCropTool\n            ? <ReactCrop src={imgSrc} \n                         onImageLoaded={setImage} \n                         crop={crop} \n                         onChange={setCrop}\n                         minHeight=\"100\"\n                         minWidth=\"100\" />\n            : <div className=\"form-input-wrapper\">\n                <Form.Control type=\"file\" \n                              accept=\"image/*\"\n                              onChange={handleInputChange} />\n              </div>\n        }\n      </Modal.Body>\n      {\n        showCropTool \n          && <Modal.Footer>\n              <Button onClick={toggleInputDisplay}\n                      variant=\"outline-primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleImageUpload}>Save</Button>\n             </Modal.Footer>\n      }\n    </>\n  )\n}\n\nUploadPicture.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(UploadPicture);","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { \n  Route, \n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// use unique IDs to force re-renders of components every time navigation links\n// are clicked\nimport { v4 as uuid } from 'uuid';\n\n// bootstrap components\nimport Modal from 'react-bootstrap/Modal';\n\n// redux action\nimport { verifyAuth } from './actions/authActions';\nimport { \n  disablePostForm, \n  disableReactionsList, \n  disableSignupForm,\n  disableUploadPicture,\n} from './actions/overlaysActions';\n\n// stylesheet\nimport './styles/App.css';\n\n// components\nimport Profile from './components/Profile';\nimport Login from './components/auth/Login';\nimport FriendsDashboard from './components/FriendsDashboard';\nimport Newsfeed from './components/Newsfeed';\nimport Navbar from './components/Navbar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PostForm from './components/PostForm';\nimport ReactionsList from './components/ReactionsList';\nimport Register from './components/auth/Register';\nimport SettingsDashboard from './components/SettingsDashboard';\nimport UploadPicture from './components/UploadPicture';\nimport Error from './components/Error';\n\nfunction App({ \n  auth, \n  verifyAuth, \n  errors, \n  overlays,\n  disablePostForm,\n  disableReactionsList,\n  disableSignupForm,\n  disableUploadPicture,\n  history,\n}) {\n  useEffect(() => {\n    // forward all errors to error page\n    if (errors?.response?.status >= 400) {\n      history.push('/error');\n    }\n  }, [errors]);\n  \n  useEffect(() => {\n    // check once, upon rendering of App, whether user is already authenticated\n    verifyAuth();\n  }, []);\n\n  const { postForm, reactionsList, signupForm, uploadPicture } = overlays;\n\n  const handleHideModal = () => {\n    if (postForm.isEnabled) {\n      disablePostForm();\n    }\n    if (reactionsList.isEnabled) {\n      disableReactionsList();\n    }\n    if (signupForm.isEnabled) {\n      disableSignupForm();\n    }\n    if (uploadPicture.isEnabled) {\n      disableUploadPicture();\n    }\n  };\n\n  const handleShowModal = () => {\n    const overlayKeys = Object.keys(overlays);\n\n    for (let key of overlayKeys) {\n      if (overlays[key].isEnabled) {\n        return true;\n      }\n    }\n    \n    return false;\n  };\n  \n  return (\n    <div className=\"App\">\n      <Modal show={handleShowModal()} \n            onHide={handleHideModal}\n            backdropClassName=\"overlay-bg\"\n            dialogClassName={`quaternary-frame ${uploadPicture.isEnabled ? \"upload-picture\" : \"\"}`}>\n        {\n          postForm.isEnabled && <PostForm />\n        }\n        {\n          reactionsList.isEnabled && <ReactionsList />\n        }\n        {\n          signupForm.isEnabled && <Register />\n        }\n        {\n          uploadPicture.isEnabled && <UploadPicture />\n        }\n      </Modal>\n\n      {\n        auth.isAuthenticated\n          && <Navbar />\n      }\n\n      <Route exact path=\"/error\" component={Error} />\n\n      {\n        auth.isAuthenticated\n          ? <Switch>\n              <Route exact path=\"/\" render={() => <Newsfeed key={uuid()} />} />\n              <PrivateRoute path=\"/friends\" component={FriendsDashboard} />\n              <PrivateRoute path=\"/settings\" component={SettingsDashboard} />\n              <PrivateRoute path=\"/:username\" component={Profile} />\n            </Switch>\n          : <Route exact path=\"/\" component={Login} />\n      }\n    </div>\n  );\n}\n\nApp.propTypes = {\n  auth: PropTypes.object.isRequired,\n  verifyAuth: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  overlays: PropTypes.object.isRequired,\n  disablePostForm: PropTypes.func.isRequired,\n  disableReactionsList: PropTypes.func.isRequired,\n  disableSignupForm: PropTypes.func.isRequired,\n  disableUploadPicture: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    errors: state.errors,\n    overlays: state.overlays\n  };\n};\n\nexport default connect(mapStateToProps, { \n  verifyAuth,\n  disablePostForm,\n  disableReactionsList,\n  disableSignupForm,\n  disableUploadPicture,\n})(withRouter(App));\n","export function mapArrayToObject(array) {\n  return array.reduce((obj, item) => {\n    if (item.id) {\n      obj[item.id] = item\n    } else {\n      obj[item] = item;\n    }\n    return obj;\n  }, {});\n}","import { mapArrayToObject } from '../utils/reduxMiddleware';\nimport { \n  ADD_FRIEND_REQUEST, \n  ADD_FRIEND_TO_AUTH, \n  DELETE_FRIEND_FROM_AUTH, \n  DELETE_FRIEND_REQUEST, \n  USER_LOGIN, \n  USER_LOGOUT,\n  UPDATE_USER,\n} from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case USER_LOGIN:\n      const authenticatedUser = {...payload};\n\n      authenticatedUser.incomingFriendRequests = mapArrayToObject(\n        authenticatedUser.incomingFriendRequests\n      );\n\n      authenticatedUser.outgoingFriendRequests = mapArrayToObject(\n        authenticatedUser.outgoingFriendRequests\n      );\n\n      authenticatedUser.friends = mapArrayToObject(\n        authenticatedUser.friends\n      );\n      \n      return {\n        ...state,\n        isAuthenticated: payload.username ? true : false,\n        user: authenticatedUser\n      };\n\n    case USER_LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: {}\n      };\n\n    case ADD_FRIEND_REQUEST:\n      const newObj = {};\n      newObj[payload.id] = payload;\n      \n      return {\n        ...state,\n        user: {\n          ...state.user,\n          outgoingFriendRequests: {\n            ...state.user.outgoingFriendRequests,\n            ...newObj\n          }\n        }\n      };\n    \n    case DELETE_FRIEND_REQUEST:\n      const updatedOutbound = {...state.user.outgoingFriendRequests};\n      delete updatedOutbound[payload];\n\n      const updatedInbound = {...state.user.incomingFriendRequests};\n      delete updatedInbound[payload];\n    \n      return {\n        ...state,\n        user: {\n          ...state.user,\n          outgoingFriendRequests: updatedOutbound,\n          incomingFriendRequests: updatedInbound\n        }\n      };\n\n    case ADD_FRIEND_TO_AUTH:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          friends: {\n            ...state.user.friends,\n            [payload.id]: payload\n          }\n        }\n      };\n\n    case DELETE_FRIEND_FROM_AUTH:\n      const updatedFriends = {...state.user.friends};\n      delete updatedFriends[payload];\n    \n      return {\n        ...state,\n        user: {\n          ...state.user,\n          friends: updatedFriends\n        }\n      };\n    \n    case UPDATE_USER:\n      const { name, picture } = payload;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          name,\n          picture\n        }\n      };\n\n    default:\n      return state;\n  }\n}","import { CLEAR_ERRORS, GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    case CLEAR_ERRORS:\n      return {};\n      \n    default:\n      return state;\n  }\n}","import { \n  ADD_POST,\n  ADD_POST_REACTION, \n  DELETE_POST, \n  DELETE_POST_REACTION, \n  GET_POSTS, \n  RESET_POSTS, \n  UPDATE_POST\n} from \"../actions/types\";\n\nconst initialState = [];\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case GET_POSTS:\n      return payload;\n\n    case ADD_POST_REACTION:\n      return state.reduce((newArr, post) => {\n        if (post.id === payload.post.id) {\n          post.reactions.push(payload.reaction);\n        }\n        newArr.push(post);\n        return newArr;\n      }, []);\n    \n    case DELETE_POST_REACTION:\n      return state.reduce((newArr, post) => {\n        if (post.id === payload.post.id) {\n          post.reactions = post.reactions.filter((reaction) => (\n            reaction._id !== payload.reaction._id\n          ));\n        }\n        newArr.push(post);\n        return newArr;\n      }, []);\n\n    case DELETE_POST:\n      return state.reduce((newArr, post) => {\n        if (post.id !== payload.id) {\n          newArr.push(post);\n        }\n        \n        return newArr;\n      }, []);\n\n    case UPDATE_POST:\n      return state.reduce((newArr, post) => {\n        if (post.id === payload.id) {\n          post.content = payload.content;\n        }\n        newArr.push(post);\n        return newArr;\n      }, []);\n\n    case ADD_POST:\n      return [\n        payload,\n        ...state\n      ];\n\n    case RESET_POSTS:\n      return [];\n\n    default:\n      return state;\n  }\n}","import { \n  GET_COMMENTS, \n  ADD_COMMENT, \n  DELETE_COMMENT, \n  UPDATE_COMMENT,\n  ADD_COMMENT_REACTION,\n  DELETE_COMMENT_REACTION,\n  MAP_POST_TO_COMMENTS,\n  UNMAP_POST_TO_COMMENTS,\n  RESET_COMMENTS\n} from \"../actions/types\";\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case GET_COMMENTS:\n      return payload;\n    \n    case ADD_COMMENT:\n      const newStateArr = [...state[payload[0].post_id]];\n    \n      // eslint-disable-next-line array-callback-return\n      payload.map((newComment) => {\n        \n        // add new comment to its parent comment when it is a reply to a comment\n        if (newComment.post_id !== newComment.parent_id) {\n          // look for the new comment's parent comment and add it to\n          // parent's replies\n          for (let comment of newStateArr) {\n            if (comment.id === newComment.parent_id) {\n              // check whether new comment is already in its parent's replies\n              const index = comment.replies.findIndex((reply) => (\n                reply.id === newComment.id\n              ));\n\n              if (index > -1) { // implies comment was found\n                comment.replies[index] = newComment;\n\n                // remove existing comment from state to preserve comments order\n                for (let i = 0; i < newStateArr.length; i++) {\n                  if (newStateArr[i].id === newComment.id) {\n                    newStateArr.splice(i, 1);\n                    break;\n                  }\n                }\n              } else {\n                comment.replies.push(newComment);\n              }\n              \n              break;\n            }\n          }\n        }\n\n        // insert the new comment at the end of comments array in state\n        newStateArr.push(newComment);\n      });\n\n      return {\n        ...state,\n        [newStateArr[0].post_id]: newStateArr\n      };\n    \n    case DELETE_COMMENT:\n      const deletedComment = payload;\n\n      // remove deleted comment from its parent comment's replies if it is a \n      // reply to a comment\n      if (deletedComment.post_id !== deletedComment.parent_id) {\n        return {\n          ...state,\n          [deletedComment.post_id]: state[deletedComment.post_id].reduce(\n            (newArr, comment) => {\n              // save only comments that are not the deleted comment\n              if (comment.id !== deletedComment.id) {\n                newArr.push(comment);\n              }\n\n              // look for the deleted comment's parent comment and remove it\n              // from the parent comment's replies array\n              if (comment.id === deletedComment.parent_id) {\n                comment.replies = comment.replies.filter((comment) => (\n                  comment.id !== deletedComment.id\n                ));\n              }\n              \n              return newArr;\n            }, \n            []\n          )\n        };\n      }\n\n      // otherwise, only save comments that aren't the deleted comment\n      return {\n        ...state,\n        [deletedComment.post_id]: state[deletedComment.post_id].filter(\n          (comment) => comment.id !== deletedComment.id\n        )\n      };\n\n    case UPDATE_COMMENT:\n      const updatedComment = payload;\n      return {\n        ...state,\n        [updatedComment.post_id]: state[updatedComment.post_id].map(\n          (comment) => {\n            if (comment.id === updatedComment.id) {\n              comment.content = updatedComment.content;\n            }\n            return comment;\n          }\n        )\n      };\n    \n    case ADD_COMMENT_REACTION:\n      const { comment, reaction } = payload;\n      return {\n        ...state,\n        [comment.post_id]: state[comment.post_id].map(\n          (item) => {\n            if (item.id === comment.id) {\n              item.reactions.push(reaction);\n            }\n            return item;\n          }\n        )\n      };\n\n    case DELETE_COMMENT_REACTION:\n      return {\n        ...state,\n        [payload.comment.post_id]: state[payload.comment.post_id].map(\n          (item) => {\n            if (item.id === payload.comment.id) {\n              item.reactions = item.reactions.filter((element) => (\n                element._id !== payload.reaction._id\n              ));\n            }\n            return item;\n          }\n        )\n      };\n\n    case MAP_POST_TO_COMMENTS:\n      return {\n        ...state,\n        [payload.id]: []\n      };\n\n    case UNMAP_POST_TO_COMMENTS:\n      const newState = {...state};\n      delete newState[payload.id];\n    \n      return newState;\n\n    case RESET_COMMENTS:\n      return {};\n\n    default:\n      return state;\n  }\n}","import { \n  ENABLE_POST_FORM, \n  DISABLE_POST_FORM,\n  ENABLE_REACTIONS_LIST,\n  DISABLE_REACTIONS_LIST,\n  ENABLE_SIGNUP_FORM,\n  DISABLE_SIGNUP_FORM,\n  ENABLE_UPLOAD_PICTURE,\n  DISABLE_UPLOAD_PICTURE\n} from \"../actions/types\";\n\nconst initialState = {\n  postForm: {\n    isEnabled: false,\n    profile: {}\n  },\n  reactionsList: {\n    isEnabled: false,\n    reactions: []\n  },\n  signupForm: {\n    isEnabled: false\n  },\n  uploadPicture: {\n    isEnabled: false\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case ENABLE_POST_FORM:\n      if (payload?.post?.id) { // implies a post was passed in\n        return {\n          ...state,\n          postForm: {\n            isEnabled: true,\n            post: payload.post,\n            profile: payload.post.destination_profile\n          }\n        };\n      } else { // imples a new post is being created\n        return {\n          ...state,\n          postForm: {\n            isEnabled: true,\n            profile: payload.profile\n          }\n        };\n      }\n\n    case DISABLE_POST_FORM:\n      return {\n        ...state,\n        postForm: {\n          isEnabled: false,\n          profile: {}\n        }\n      };\n\n    case ENABLE_REACTIONS_LIST:\n      return {\n        ...state,\n        reactionsList: {\n          isEnabled: true,\n          reactions: payload\n        }\n      };\n\n    case DISABLE_REACTIONS_LIST:\n      return {\n        ...state,\n        reactionsList: {\n          isEnabled: false,\n          reactions: []\n        }\n      };\n\n    case ENABLE_SIGNUP_FORM:\n      return {\n        ...state,\n        signupForm: {\n          isEnabled: true\n        }\n      };\n\n    case DISABLE_SIGNUP_FORM:\n      return {\n        ...state,\n        signupForm: {\n          isEnabled: false\n        }\n      };\n\n    case ENABLE_UPLOAD_PICTURE:\n      return {\n        ...state,\n        uploadPicture: {\n          isEnabled: true\n        }\n      };\n\n    case DISABLE_UPLOAD_PICTURE:\n      return {\n        ...state,\n        uploadPicture: {\n          isEnabled: false\n        }\n      };\n      \n    default:\n      return state;\n  }\n}","import { mapArrayToObject } from '../utils/reduxMiddleware';\nimport { \n  ADD_FRIEND,\n  DELETE_FRIEND,\n  GET_FRIENDS,\n} from \"../actions/types\";\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case GET_FRIENDS:\n      const friendsObj = mapArrayToObject(payload);\n      return friendsObj;\n\n    case ADD_FRIEND:\n      const newFriend = {};\n      newFriend[payload.id] = payload;\n    \n      return {\n        ...state,\n        ...newFriend\n      };\n\n    case DELETE_FRIEND:\n      const updatedState = {...state};\n      delete updatedState[payload.userId];\n      delete updatedState[payload.friendId];\n\n      return updatedState;\n    \n    default:\n      return state;\n  }\n}","import { CLEAR_ACTION, GET_ACTION } from '../actions/types';\n\nconst initialState = {\n  type: \"\",\n  payload: null\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, { type, payload }) {\n  switch(type) {\n    case GET_ACTION:\n      return payload;\n\n    case CLEAR_ACTION:\n      return {\n        type: \"\",\n        payload: null\n      };\n    \n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport postReducer from \"./postReducer\";\nimport commentReducer from \"./commentReducer\";\nimport overlaysReducer from \"./overlaysReducer\";\nimport friendReducer from \"./friendReducer\";\nimport actionReducer from \"./actionReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  posts: postReducer,\n  comments: commentReducer,\n  overlays: overlaysReducer,\n  friends: friendReducer,\n  action: actionReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { io } from 'socket.io-client';\n\n// redux actions types\nimport { \n  ADD_COMMENT,\n  ADD_POST, \n  DELETE_COMMENT, \n  DELETE_POST, \n  MAP_POST_TO_COMMENTS,\n  UNMAP_POST_TO_COMMENTS,\n  UPDATE_COMMENT,\n  UPDATE_POST,\n  ADD_COMMENT_REACTION,\n  ADD_POST_REACTION,\n  DELETE_COMMENT_REACTION,\n  DELETE_POST_REACTION,\n} from './actions/types';\n\n// stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\n\n// redux global state\nimport store from './store';\n\n// initialize socket.io connection\nconst socket = io();\n\nconst dispatch = store.dispatch;\n\nsocket.on('new post', (post) => {\n  dispatch({\n    type: ADD_POST,\n    payload: post\n  });\n\n  dispatch({\n    type: MAP_POST_TO_COMMENTS,\n    payload: post\n  });\n});\n\nsocket.on('update post', (post) => {\n  dispatch({\n    type: UPDATE_POST,\n    payload: post\n  });\n});\n\nsocket.on('delete post', (post) => {\n  dispatch({\n    type: DELETE_POST,\n    payload: post\n  });\n\n  dispatch({\n    type: UNMAP_POST_TO_COMMENTS,\n    payload: post\n  });\n});\n\nsocket.on('new comment', (comment) => {\n  dispatch({\n    type: ADD_COMMENT,\n    payload: [comment]\n  });\n});\n\nsocket.on('update comment', (comment) => {\n  dispatch({\n    type: UPDATE_COMMENT,\n    payload: comment\n  });\n});\n\nsocket.on('delete comment', (comment) => {\n  dispatch({\n    type: DELETE_COMMENT,\n    payload: comment\n  });\n});\n\nsocket.on('new reaction', (reactionObj) => {\n  if (reactionObj.comment) {\n    dispatch({\n      type: ADD_COMMENT_REACTION,\n      payload: reactionObj\n    });\n  } else {\n    dispatch({\n      type: ADD_POST_REACTION,\n      payload: reactionObj\n    });\n  }\n});\n\nsocket.on('delete reaction', (reactionObj) => {\n  if (reactionObj.comment) {\n    dispatch({\n      type: DELETE_COMMENT_REACTION,\n      payload: reactionObj\n    });\n  } else {\n    dispatch({\n      type: DELETE_POST_REACTION,\n      payload: reactionObj\n    });\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport { socket };"],"sourceRoot":""}